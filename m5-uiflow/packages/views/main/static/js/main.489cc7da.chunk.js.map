{"version":3,"sources":["polyfill/image.js","constants/index.js","actions/global.action.js","reducers/global.js","actions/modal.action.js","reducers/modal.js","actions/burn.action.js","reducers/burn.js","actions/stdout.action.js","reducers/stdout.js","actions/firmware.action.js","reducers/firmware.js","reducers/index.js","ipc/events.js","components/PreferencePanel/PreferencePanel.js","components/PreferencePanel/index.js","components/LoginForm/LoginForm.js","containers/TopBar/TopBar.js","containers/TopBar/index.js","components/HeaderFormItem/HeaderFormSelector.js","components/SerialLog/SerialLog.js","components/SerialLog/index.js","components/HeaderForm/HeaderForm.js","components/HeaderForm/index.js","containers/Header/Header.js","containers/Header/index.js","components/DeviceList/DeviceList.js","components/DeviceList/index.js","components/Searchbox/Searchbox.js","components/Searchbox/index.js","components/ConfigForm/index.js","components/ConfigForm/ConfigForm.js","components/Loading/Loading.js","components/Loading/index.js","components/WifiInput/index.js","components/WifiInput/WifiInput.js","components/DataDemoTextBox/DataDemoTextBox.js","components/TimerCamCfg/TimerCamCfg.js","components/ImageWallPaperCfg/ImageWallPaperCfg.js","components/PaperWeatherStationCfg/PaperWeatherStationCfg.js","components/QRCode/QRCode.js","components/SmbTimerCamCfg/SmbTimerCamCfg.js","components/SmbTimerCamCfg/index.js","components/AwsOssTimerCamCfg/AwsOssTimerCamCfg.js","components/AwsOssTimerCamCfg/index.js","components/FirmwareItem/FirmwareItem.js","components/FirmwareItem/index.js","components/FirmwareList/FirmwareList.js","components/FirmwareList/index.js","containers/Firmware/Firmware.js","containers/DynamicModal/DynamicModal.js","App.js","index.js"],"names":["document","createElement","HTMLImageElement","prototype","play","this","storeCanvas","parentElement","removeChild","style","opacity","storeUrl","src","stop","_this","canvas","cloneImage","Image","onload","ev","width","height","console","log","getContext","drawImage","toDataURL","e","removeAttribute","position","insertBefore","Theme","AnimationState","DownloadStatus","BaudrateOptions","GlobalActionTypes","setTheme","payload","type","setBurnParams","setLoginState","initialState","theme","language","burnParams","flashMode","flashFrequency","flashSize","version","lastest","loginState","ssoToken","owns","ModalActionTypes","openModal","setAnimation","visiable","component","animation","BurnActionTypes","setBaudrate","com","baudrate","StdoutActionTypes","startStdout","appendStdout","message","FirmwareActionTypes","list","core","core2","stickc","atom","stickv","timercam","coreink","paper","stamp","raw","selected","keyword","reducers","combineReducers","global","state","action","modal","burn","stdout","firmware","newList","JSON","parse","stringify","newState","forEach","name","item","versions","find","v","downloadStatus","progress","exist","currentList","device","filter","f","toUpperCase","includes","store","createStore","ipcRenderer","window","require","CommandTypes","sendCommand","cmd","args","callback","eventName","eventNames","on","data","send","sendCommandOnce","once","sendCommandWithCustom","sub","PreferencePanel","connect","config","props","onClose","onChange","onUpdate","panelRef","useRef","useEffect","timer","setTimeout","current","classList","add","remove","clearTimeout","hidePanelHandler","changeBurnParams","key","value","className","onClick","ref","stopPropagation","target","useState","localStorage","getItem","email","setEmail","pwd","setPwd","loading","setLoading","alt","gotoRegister","gotoReset","swal","close","onLogin","text","icon","electron","shell","TopBar","maximize","bind","minimize","quit","update","openPreferencePanel","changeSelectorHandler","openLoginForm","handleLogout","handleGotoDeviceManagement","test","closePanelHandler","hideModal","title","buttons","confirm","closeModal","cancel","visible","closeOnClickOutside","closeOnEsc","then","result","getState","actions","stopLoading","getElementsByClassName","display","innerText","confirmBtn","querySelectorAll","length","addEventListener","response","sendSync","sendCommandSync","password","errHandler","ret","setItem","isLogin","openExternal","container","ReactDOM","render","handleLogin","handleGotoRegister","handleGotoReset","content","loginedEmail","needUpdate","checkVersion","cs","React","Component","dispatch","_","loginInfo","HeaderFormSelector","field","options","map","opt","SerialLog","logRef","scrollTo","scrollHeight","footer","HeaderForm","bindLock","coms","ssid","passwordVisible","changeCOMHandler","changeBaudrateHandler","refreshCOMs","erase","watchCOM","updateSSID","updatePassword","togglePasswordVisible","bindDevice","_getPorts","setState","port","path","setCOM","preventDefault","closeModalHandler","footerButtons","startStdoutMessage","appendStdoutMessage","sendHandler","getElementById","id","onKeyPress","charCode","ctrlKey","Header","DeviceList","setSelected","treeRef","topArrowRef","bottomArrowRef","scrollTop","light","dark","draggable","Searchbox","placeholder","ConfigForm","option","setOption","setPasswordVisible","copyState","setCopyState","apikey","start","server","defaultValue","wifi","deviceType","COMX","APN","onSave","Loading","WifiInput","setSSID","pwdVisible","setPwdVisible","disabled","readOnly","IMAGE_SIZE_ENUM","accessKey","setAccessKey","accessKeySecret","setAccessKeySecret","serverAddr","setServerAddr","bucket","setBucket","wakeTime","setWakeTime","imageSize","setImageSize","ImageSizeList","size","index","onBlur","padding","color","marginLeft","cursor","textDecoration","gotoRefer","url","setUrl","invalidState","setInvalidState","handleUpdateUrl","onLoad","onError","err","fontSize","marginTop","latitude","setLatitude","longitude","setLongitude","setLanguage","setApikey","gotoApplyApi","token","fgColor","SmbTimerCamCfg","host","setHost","user","setUser","smbPwd","setSmbPwd","setPath","prefix","setPrefix","interval","setInterval","smbPwdVisible","setSmbPwdVisible","AwsOssTimerCamCfg","tmpProps","handleGotoApplyApi","burnHandler","other","undefined","off","listeners","firmwareVersion","configurateHandle","json","val","saveSettingHandle","beforeSave","FirmwareItem","selectedType","downloadHanlder","removeHandler","sort","a","b","Date","publishAt","selectedVersion","setSelectedVersion","selectRef","findIndex","versionSelector","btnShowDataDemo","dataDemo","downloadCounter","parseInt","downloaded","downloadText","isNaN","toFixed","toString","cover","persist","imgErrorHandler","onMouseOver","__firstInited","__played","onMouseLeave","endsWith","publisher","repoLink","href","openLinkHandler","description","modalOpts","wrapper","view","getTokenHandler","indexOf","tiemrcamCfgWrapper","smbpassword","replace","substring","imagewpCfgWrapper","trim","paperwsCfgWrapper","parseFloat","beforeBurn","styles","downloadButton","FirmwareList","firmwareList","listRef","scrollHandler","transform","srcElement","removeEventListener","Firmware","removeHanlder","_updateFirmwares","setCurrentDevice","inputChangeHandler","_getFirmwares","getFirmwares","local","updateFirmwares","ok","r","callbackSubscribe","updateFirmwareDownloadStatus","setSelectedDeviceType","searchFirmware","firmwares","updateDownloadStatus","DynamicModal","beforeCloseModal","newProps","params","setVersion","setLastestVersion","setOwns","hardwares","all","Root"],"mappings":"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","file":"static/js/main.489cc7da.chunk.js","sourcesContent":["if ('getContext' in document.createElement('canvas')) {\r\n    HTMLImageElement.prototype.play = function() {\r\n        if (this.storeCanvas) {\r\n            // 移除存储的canvas\r\n            this.storeCanvas.parentElement.removeChild(this.storeCanvas);\r\n            this.storeCanvas = null;\r\n            // 透明度还原\r\n            this.style.opacity = '';\r\n        }\r\n        if (this.storeUrl) {\r\n            this.src = this.storeUrl;    \r\n        }\r\n    };\r\n    // HTMLImageElement.prototype.stop = function() {\r\n    //     var canvas = document.createElement('canvas');\r\n    //     // 尺寸\r\n    //     var width = this.width, height = this.height;\r\n    //     if (width && height) {\r\n    //         // 存储之前的地址\r\n    //         if (!this.storeUrl) {\r\n    //             this.storeUrl = this.src;\r\n    //         }\r\n    //         // canvas大小\r\n    //         canvas.width = width;\r\n    //         canvas.height = height;\r\n    //         // 绘制图片帧（第一帧）\r\n    //         canvas.getContext('2d').drawImage(this, 0, 0, width, height);\r\n    //         // 重置当前图片\r\n    //         try {\r\n    //             this.src = canvas.toDataURL(\"image/gif\");\r\n    //         } catch(e) {\r\n    //             // 跨域\r\n    //             this.removeAttribute('src');\r\n    //             // 载入canvas元素\r\n    //             canvas.style.position = 'absolute';\r\n    //             // 前面插入图片\r\n    //             this.parentElement.insertBefore(canvas, this);\r\n    //             // 隐藏原图\r\n    //             this.style.opacity = '0';\r\n    //             // 存储canvas\r\n    //             this.storeCanvas = canvas;\r\n    //         }\r\n    //     }\r\n    // };\r\n    HTMLImageElement.prototype.stop = function() {\r\n        var _this = this;\r\n        var canvas = document.createElement('canvas');\r\n        var cloneImage = new Image();\r\n        cloneImage.src = this.src;\r\n        cloneImage.onload = function(ev) {\r\n            // 尺寸\r\n            var width = this.width, height = this.height;\r\n            if (width && height) {\r\n                // 存储之前的地址\r\n                if (!_this.storeUrl) {\r\n                    _this.storeUrl = _this.src;\r\n                }\r\n                // canvas大小\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n                console.log(width, height);\r\n                // 绘制图片帧（第一帧）\r\n                canvas.getContext('2d').drawImage(_this, 0, 0, width, height);\r\n                // 重置当前图片\r\n                try {\r\n                    _this.src = canvas.toDataURL(\"image/gif\");\r\n                } catch(e) {\r\n                    // 跨域\r\n                    _this.removeAttribute('src');\r\n                    // 载入canvas元素\r\n                    canvas.style.position = 'absolute';\r\n                    // 前面插入图片\r\n                    _this.parentElement.insertBefore(canvas, _this);\r\n                    // 隐藏原图\r\n                    _this.style.opacity = '0';\r\n                    // 存储canvas\r\n                    _this.storeCanvas = canvas;\r\n                }\r\n            }\r\n        }\r\n    };\r\n}","export const Theme = {\r\n    Light: 'light',\r\n    Dark: 'dark'\r\n}\r\n\r\nexport const Language = {\r\n    en: 'en',\r\n    cn: 'zh-cn'\r\n}\r\n\r\nexport const AnimationState = {\r\n    NONE: '',\r\n    FADE_IN: 'fade-in',\r\n    FADE_OUT: 'fade-out'\r\n}\r\n\r\nexport const DownloadStatus = {\r\n    WAITING: 'waiting',\r\n    DOWNLOADING: 'downloading',\r\n    END: 'end',\r\n    ERROR: 'error'\r\n}\r\n\r\nexport const BaudrateOptions = [\r\n    '1500000', '921600', '750000', '512000', '256000', '230400', '115200'\r\n];","export const GlobalActionTypes = {\r\n    SET_THEME: 'SET_THEME',\r\n    SET_LANGUAGE: 'SET_LANGUAGE',\r\n    SET_BURN_PARAMS: 'SET_BURN_PARAMS',\r\n    SET_VERSION: 'SET_VERSION',\r\n    SET_LASTEST_VERSION: 'SET_LASTEST_VERSION',\r\n    SET_LOGIN_STATE: 'SET_LOGIN_STATE',\r\n    SET_OWNS: 'SET_OWNS'\r\n}\r\n\r\nexport function setTheme(payload) {\r\n    return {\r\n        type: GlobalActionTypes.SET_THEME,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function setLanguage(payload) {\r\n    return {\r\n        type: GlobalActionTypes.SET_LANGUAGE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function setBurnParams(payload) {\r\n    return {\r\n        type: GlobalActionTypes.SET_BURN_PARAMS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function setVersion(payload) {\r\n    return {\r\n        type: GlobalActionTypes.SET_VERSION,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function setLastestVersion(payload) {\r\n    return {\r\n        type: GlobalActionTypes.SET_LASTEST_VERSION,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function setLoginState(payload) {\r\n    return {\r\n        type: GlobalActionTypes.SET_LOGIN_STATE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function setOwns(payload) {\r\n    return {\r\n        type: GlobalActionTypes.SET_OWNS,\r\n        payload\r\n    }\r\n}\r\n","import { Theme, Language } from '../constants';\r\nimport { GlobalActionTypes } from '../actions/global.action';\r\n\r\nconst initialState = {\r\n    theme: Theme.Light,\r\n    language: Language.en,\r\n    burnParams: {\r\n        flashMode: 'dio',\r\n        flashFrequency: '80m',\r\n        flashSize: 'detect'\r\n    },\r\n    version: '',\r\n    lastest: '',\r\n    loginState: false,\r\n    ssoToken: '',\r\n    owns: []\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GlobalActionTypes.SET_THEME:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        case GlobalActionTypes.SET_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        case GlobalActionTypes.SET_BURN_PARAMS:\r\n            return {\r\n                ...state,\r\n                burnParams: {\r\n                    ...state.burnParams,\r\n                    ...action.payload\r\n                }\r\n            };\r\n        case GlobalActionTypes.SET_VERSION:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case GlobalActionTypes.SET_LASTEST_VERSION:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case GlobalActionTypes.SET_LOGIN_STATE:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        case GlobalActionTypes.SET_OWNS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const ModalActionTypes = {\r\n    OPEN_MODAL: 'OPEN_MODAL',\r\n    CLOSE_MODAL: 'CLOSE_MODAL',\r\n    SET_ANIMATION: 'SET_ANIMATION_STATE'\r\n}\r\n\r\nexport function openModal(payload) {\r\n    return {\r\n        type: ModalActionTypes.OPEN_MODAL,\r\n        ...payload\r\n    }\r\n}\r\n\r\nexport function closeModal() {\r\n    return {\r\n        type: ModalActionTypes.CLOSE_MODAL\r\n    }\r\n}\r\n\r\nexport function setAnimation(payload) {\r\n    return {\r\n        type: ModalActionTypes.SET_ANIMATION,\r\n        ...payload\r\n    }\r\n}","import { ModalActionTypes } from \"../actions/modal.action\";\r\n\r\nconst initialState = {\r\n    visiable: false,\r\n    component: null,\r\n    animation: ''\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case ModalActionTypes.OPEN_MODAL:\r\n            return {\r\n                ...state,\r\n                visiable: true,\r\n                component: action.component\r\n            }\r\n\r\n        case ModalActionTypes.CLOSE_MODAL:\r\n            return {\r\n                ...state,\r\n                visiable: false,\r\n                component: null\r\n            }\r\n            \r\n        case ModalActionTypes.SET_ANIMATION:\r\n            return {\r\n                ...state,\r\n                animation: action.animation\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const BurnActionTypes = {\r\n    SET_COM: 'SET_COM',\r\n    SET_BAUDRATE: 'SET_BAUDRATE'\r\n}\r\n\r\nexport function setCOM(payload) {\r\n    return {\r\n        type: BurnActionTypes.SET_COM,\r\n        ...payload\r\n    }\r\n}\r\n\r\nexport function setBaudrate(payload) {\r\n    return {\r\n        type: BurnActionTypes.SET_BAUDRATE,\r\n        ...payload\r\n    }\r\n}\r\n","import { BurnActionTypes } from '../actions/burn.action';\r\n\r\nconst initialState = {\r\n    com: '',\r\n    baudrate: '1500000'\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case BurnActionTypes.SET_COM:\r\n            return {\r\n                ...state,\r\n                com: action.com\r\n            }\r\n\r\n        case BurnActionTypes.SET_BAUDRATE:\r\n            return {\r\n                ...state,\r\n                baudrate: action.baudrate\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","export const StdoutActionTypes = {\r\n    START_STDOUT: 'START_STDOUT',\r\n    APPEND_STDOUT: 'APPEND_STDOUT'\r\n}\r\n\r\nexport function startStdout(payload) {\r\n    return {\r\n        type: StdoutActionTypes.START_STDOUT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function appendStdout(payload) {\r\n    return {\r\n        type: StdoutActionTypes.APPEND_STDOUT,\r\n        payload\r\n    }\r\n}","import { StdoutActionTypes } from \"../actions/stdout.action\";\r\n\r\nconst initialState = {\r\n    message: ''\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case StdoutActionTypes.START_STDOUT:\r\n            return {\r\n                message: action.payload.message\r\n            }\r\n        case StdoutActionTypes.APPEND_STDOUT:\r\n            return {\r\n                message: state.message + action.payload.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const FirmwareActionTypes = {\r\n    GET_FIRMWARE: 'GET_FIRMWARE',\r\n    UPDATE_FIRMWARES: 'UPDATE_FIRMWARES',\r\n    SELECT_FIRMWARE_TYPE: 'SELECT_FIRMWARE_TYPE',\r\n    UPDATE_DOWNLOAD_STATUS: 'UPDATE_DOWNLOAD_STATUS',\r\n    SEARCH_FIRMWARE: 'SEARCH_FIRMWARE'\r\n}\r\n\r\nexport function getFirmware(payload) {\r\n    return {\r\n        type: FirmwareActionTypes.GET_FIRMWARE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function updateFirmwares(payload) {\r\n    return {\r\n        type: FirmwareActionTypes.UPDATE_FIRMWARES,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function selectDeviceType(payload) {\r\n    return {\r\n        type: FirmwareActionTypes.SELECT_FIRMWARE_TYPE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function updateDownloadStatus(payload) {\r\n    return {\r\n        type: FirmwareActionTypes.UPDATE_DOWNLOAD_STATUS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function searchFirmware(payload) {\r\n    return {\r\n        type: FirmwareActionTypes.SEARCH_FIRMWARE,\r\n        payload\r\n    }\r\n}","import { FirmwareActionTypes } from \"../actions/firmware.action\";\r\nimport { DownloadStatus } from \"../constants\";\r\n\r\nconst initialState = {\r\n    list: {\r\n        core: [],\r\n        core2: [],\r\n        stickc: [],\r\n        atom: [],\r\n        stickv: [],\r\n        timercam: [],\r\n        coreink: [],\r\n        paper: [],\r\n        stamp: []\r\n    },\r\n    raw: {\r\n        core: [],\r\n        core2: [],\r\n        stickc: [],\r\n        atom: [],\r\n        stickv: [],\r\n        timercam: [],\r\n        coreink: [],\r\n        paper: [],\r\n        stamp: []\r\n    },\r\n    selected: 'core',\r\n    keyword: ''\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FirmwareActionTypes.GET_FIRMWARE:\r\n            return {\r\n                ...state,\r\n                list: action.payload,\r\n                raw: action.payload\r\n            }\r\n        case FirmwareActionTypes.UPDATE_FIRMWARES:\r\n            var newList = JSON.parse(JSON.stringify(action.payload));\r\n            return {\r\n                ...state,\r\n                list: newList\r\n            }\r\n        case FirmwareActionTypes.SELECT_FIRMWARE_TYPE:\r\n            return {\r\n                ...state,\r\n                selected: action.payload\r\n            }\r\n        case FirmwareActionTypes.UPDATE_DOWNLOAD_STATUS:\r\n            var newState = JSON.parse(JSON.stringify(state));\r\n            var newList = newState.list[action.payload.type];\r\n            newList.forEach(firmware => {\r\n                if(firmware.name === action.payload.name) {\r\n                    var item = firmware.versions.find(v => v.version === action.payload.version);\r\n                    item.downloadStatus = action.payload.downloadStatus;\r\n                    item.progress = action.payload.progress;\r\n                    if(action.payload.downloadStatus === DownloadStatus.END) {\r\n                        item.exist = true;\r\n                    }\r\n                }\r\n            });\r\n            return {\r\n                ...state,\r\n                ...newState\r\n            }\r\n        case FirmwareActionTypes.SEARCH_FIRMWARE:\r\n            var newState = JSON.parse(JSON.stringify(state));\r\n            if(action.payload === '') {\r\n                return {\r\n                    ...newState,\r\n                    list: newState.raw\r\n                }\r\n            }\r\n            let currentList = {}\r\n            for(let device in newState.list) {\r\n                currentList[device] = newState.raw[device].filter(f => f.name.toUpperCase().includes(action.payload.toUpperCase()));\r\n            }\r\n            return {\r\n                ...newState,\r\n                list: currentList\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers } from 'redux';\r\nimport Global from './global';\r\nimport Modal from './modal';\r\nimport Burn from './burn';\r\nimport Stdout from './stdout';\r\nimport Firmware from './firmware';\r\n\r\nconst reducers = combineReducers({\r\n    global: Global,\r\n    modal: Modal,\r\n    burn: Burn,\r\n    stdout: Stdout,\r\n    firmware: Firmware\r\n});\r\n\r\nexport const store = createStore(reducers);","const electron = window.require('electron');\r\nconst { ipcRenderer } = electron;\r\n\r\nexport const CommandTypes = {\r\n    minimize: 'Minimize',\r\n    maximize: 'Maximize',\r\n    quit: 'Quit',\r\n    restart: 'Restart',\r\n    getPorts: 'GetPorts',\r\n    erase: 'Erase',\r\n    burn: 'Burn',\r\n    cancelBurn: 'CancelBurn',\r\n    saveConfig: 'SaveConfig',\r\n    loadConfig: 'loadConfig',\r\n    loadAllConfig: 'LoadAllConfig',\r\n    watchCOM: 'WatchCOM',\r\n    closeCOM: 'CloseCOM',\r\n    getFirmwares: 'GetFirmwares',\r\n    downloadFirmware: 'DownloadFirmware',\r\n    removeFirmware: 'RemoveFirmware',\r\n    writeCOM: 'WriteCOM',\r\n    update: 'Update',\r\n    getSttToken: 'GetSttToken',\r\n    getUIFlowSetting: 'GetUIFlowSetting',\r\n    setUIFlowSetting: 'SetUIFlowSetting',\r\n    killTask: 'KillTask',\r\n    login: 'Login',\r\n    logout: 'Logout',\r\n    bindDevice: 'BindDevice',\r\n    resetDevice: 'ResetDevice'\r\n}\r\n\r\n/**\r\n * Send command with a callback event\r\n * @param {CommandTypes} cmd Command\r\n * @param {*} args Arguments\r\n * @param {Function} callback Callback event\r\n */\r\nexport const sendCommand = (cmd, args, callback) => {\r\n    let eventName = `${cmd}Callback`;\r\n    if(!ipcRenderer.eventNames().includes(eventName)) {\r\n        ipcRenderer.on(eventName, (ev, data) => {\r\n            if(callback) {\r\n                callback(data);\r\n            }\r\n        });\r\n    }\r\n    ipcRenderer.send(cmd, args);\r\n}\r\n\r\nexport const sendCommandOnce = (cmd, args, callback) => {\r\n    let eventName = `${cmd}Callback`;\r\n    if(!ipcRenderer.eventNames().includes(eventName)) {\r\n        ipcRenderer.once(eventName, (ev, data) => {\r\n            if(callback) {\r\n                callback(data);\r\n            }\r\n        });\r\n    }\r\n    ipcRenderer.send(cmd, args);\r\n}\r\n\r\nexport const sendCommandWithCustom = (sub, cmd, args, callback) => {\r\n    let eventName = `${cmd}Callback-${sub}`;\r\n    if(!ipcRenderer.eventNames().includes(eventName)) {\r\n        ipcRenderer.on(eventName, (ev, data) => {\r\n            if(callback) {\r\n                callback(data);\r\n            }\r\n        });\r\n    }\r\n    ipcRenderer.send(cmd, args);\r\n}\r\n\r\n/**\r\n * Send command sync handler\r\n * @param {CommandTypes} cmd Command\r\n * @param {*} args Arguments\r\n * @param {Function} callback Callback event\r\n */\r\nexport const sendCommandSync = (cmd, args, callback) => {\r\n    let response = ipcRenderer.sendSync(cmd, args);\r\n    if(callback) {\r\n        callback(response);\r\n    }\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Theme } from '../../constants';\r\n\r\nimport './PreferencePanel.scss';\r\n\r\nfunction PreferencePanel(props) {\r\n    const { onClose, config, onChange, onUpdate } = props;\r\n    const panelRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            panelRef.current.classList.add('slide-in');\r\n        });\r\n        return () => {\r\n            panelRef.current.classList.remove('slide-in');\r\n            panelRef.current.classList.add('slide-out');\r\n            clearTimeout(timer);\r\n        }\r\n    }, []);\r\n\r\n    const hidePanelHandler = () => {\r\n        panelRef.current.classList.remove('slide-in');\r\n        panelRef.current.classList.add('slide-out');\r\n        setTimeout(() => {\r\n            onClose();\r\n        }, 250);\r\n    }\r\n\r\n    const changeTheme = ev => {\r\n        onChange('theme', ev.target.value);\r\n    }\r\n\r\n    const changeBurnParams = (key, value) => {\r\n        onChange(key, value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper-panel-preference\" onClick={hidePanelHandler}>\r\n            <div className=\"panel-preference\" ref={panelRef} onClick={ev => ev.stopPropagation()}>\r\n                <h2>Preference</h2>\r\n                <form className=\"form-preference\">\r\n                    <h3>General</h3>\r\n                    <div className=\"form-item\">\r\n                        <label>Theme</label>\r\n                        <select value={config.theme} onChange={changeTheme}>\r\n                            <option value={Theme.Light}>Light</option>\r\n                            <option value={Theme.Dark}>Dark</option>\r\n                        </select>\r\n                    </div>\r\n                    <h3>Advanced</h3>\r\n                    <div className=\"form-item\">\r\n                        <label>Flash Frequency</label>\r\n                        <select\r\n                            value={config.burnParams.flashFrequency}\r\n                            onChange={ev => changeBurnParams('flashFrequency', ev.target.value)}\r\n                        >\r\n                            <option value=\"80m\">80m</option>\r\n                            <option value=\"40m\">40m</option>\r\n                            <option value=\"26m\">26m</option>\r\n                            <option value=\"20m\">20m</option>\r\n                            <option value=\"keep\">Keep</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label>Flash Size</label>\r\n                        <select\r\n                            value={config.burnParams.flashSize}\r\n                            onChange={ev => changeBurnParams('flashSize', ev.target.value)}\r\n                        >\r\n                            <option value=\"detect\">Detect</option>\r\n                            <option value=\"16MB\">16MB</option>\r\n                            <option value=\"4MB\">4MB</option>\r\n                            <option value=\"2MB\">2MB</option>\r\n                            <option value=\"1MB\">1MB</option>\r\n                        </select>\r\n                    </div>\r\n                    <h3>Version</h3>\r\n                    <div className=\"form-item\">\r\n                        <label>Current: {config.version}</label>\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label>Lastest: {config.lastest}</label>\r\n                        {\r\n                            config.lastest > config.version ?\r\n                            <a className=\"btn-update\" onClick={onUpdate}>Update</a>:\r\n                            null\r\n                        }\r\n                        \r\n                    </div>\r\n                </form>\r\n                <footer>\r\n                    <button className=\"btn cancel\" onClick={hidePanelHandler}>Back</button>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        config: state.global\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(PreferencePanel);","import PreferencePanel from './PreferencePanel';\r\n\r\nexport default PreferencePanel;","import React, { useState } from 'react';\r\nimport './LoginForm.scss';\r\n\r\nexport default props => {\r\n    let [email, setEmail] = useState(localStorage.getItem('m5sso_email') || '');\r\n    let [pwd, setPwd] = useState(localStorage.getItem('m5sso_password') || '');\r\n    let [loading, setLoading] = useState(false);\r\n\r\n    let handleLogin = () => {\r\n        if(loading) return;\r\n        setLoading(true);\r\n        props.onLogin(email, pwd, () => {\r\n            setLoading(false);\r\n            window.swal({\r\n                text: `Login failed, check your email or password.`,\r\n                icon: 'error',\r\n            })\r\n        });\r\n    }\r\n\r\n    let handleRegister = ev => {\r\n        props.gotoRegister();\r\n    }\r\n\r\n    let handleReset = ev => {\r\n        props.gotoReset();\r\n    }\r\n\r\n    let handleCancel = () => {\r\n        window.swal.close();\r\n    }\r\n\r\n    return (\r\n        <div className=\"login--form\">\r\n            <img className=\"logo\" src=\"assets/images/logo.png\" alt=\"logo\" />\r\n            <div className=\"item\">\r\n                <span>Email:</span>\r\n                <input value={email} onChange={ev => setEmail(ev.target.value)} />\r\n            </div>\r\n            <div className=\"item\">\r\n                <span>Password:</span>\r\n                <input value={pwd} type=\"password\" onChange={ev => setPwd(ev.target.value)} />\r\n            </div>\r\n            <div className=\"item\">\r\n                <a className=\"link\" onClick={ev => handleRegister(ev)}>\r\n                    Create a new account\r\n                </a>\r\n            </div>\r\n            <div className=\"item\">\r\n                <a className=\"link\" onClick={ev => handleReset(ev)}>\r\n                    Forget password\r\n                </a>\r\n            </div>\r\n            <div className=\"controller\">\r\n                <button className=\"btn-cancel\" onClick={handleCancel}>\r\n                    <span>Cancel</span>\r\n                </button>\r\n                <button className={loading?'loading':''} onClick={handleLogin}>\r\n                    {\r\n                        loading\r\n                        ? <i className=\"iconfont icon-spin spin\"></i>\r\n                        : null\r\n                    }\r\n                    <span>Login</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport cs from 'classnames';\r\nimport { AnimationState } from '../../constants';\r\nimport { CommandTypes, sendCommand, sendCommandSync, sendCommandOnce } from '../../ipc/events';\r\nimport { openModal, setAnimation } from '../../actions/modal.action';\r\nimport { setTheme, setBurnParams, setLoginState } from '../../actions/global.action';\r\nimport PreferencePanel from '../../components/PreferencePanel';\r\nimport LoginForm from '../../components/LoginForm/LoginForm';\r\n\r\nimport './TopBar.scss';\r\n\r\nconst electron = window.require('electron');\r\nconst { ipcRenderer, shell } = electron;\r\n\r\nclass TopBar extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.maximize = this.maximize.bind(this);\r\n        this.minimize = this.minimize.bind(this);\r\n        this.quit = this.quit.bind(this);\r\n        this.update = this.update.bind(this);\r\n        this.openPreferencePanel = this.openPreferencePanel.bind(this);\r\n        this.changeSelectorHandler = this.changeSelectorHandler.bind(this);\r\n        this.openLoginForm = this.openLoginForm.bind(this);\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n        this.handleGotoDeviceManagement = this.handleGotoDeviceManagement.bind(this);\r\n\r\n        window.test = this.update.bind(this);\r\n    }\r\n\r\n    openPreferencePanel() {\r\n        if(!this.props.modal.visiable) {\r\n            const closePanelHandler = this.props.hideModal;\r\n            this.props.openModal(\r\n                <PreferencePanel\r\n                    onChange={this.changeSelectorHandler}\r\n                    onClose={closePanelHandler}\r\n                    onUpdate={this.update}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    changeSelectorHandler(key, value) {\r\n        if(key === 'theme') {\r\n            this.props.setTheme(value);\r\n            sendCommand(CommandTypes.saveConfig, { key, value });\r\n        } else {\r\n            this.props.setBurnParams(key, value);\r\n            sendCommand(CommandTypes.saveConfig, { key: 'burnParams', value: { [key]: value } });\r\n        }\r\n    }\r\n\r\n    maximize() {\r\n        sendCommand(CommandTypes.maximize, null, null);\r\n    }\r\n\r\n    minimize() {\r\n        sendCommand(CommandTypes.minimize, null, null);\r\n    }\r\n\r\n    quit() {\r\n        sendCommand(CommandTypes.quit, null, null);\r\n    }\r\n\r\n    update() {\r\n        window.swal({\r\n            title: 'Tips',\r\n            text: 'Do you sure to update?',\r\n            icon: 'warning',\r\n            buttons: {\r\n                confirm: {\r\n                    text: 'Yes',\r\n                    closeModal: false,\r\n                    value: true\r\n                },\r\n                cancel: {\r\n                    text: 'No',\r\n                    closeModal: false,\r\n                    value: false,\r\n                    visible: true\r\n                }\r\n            },\r\n            closeOnClickOutside: false,\r\n            closeOnEsc: false\r\n        })\r\n        .then(result => {\r\n            if(!result) {\r\n                window.swal.getState().actions.cancel.closeModal = true;\r\n                window.swal.stopLoading();\r\n                window.swal.close();\r\n                return;\r\n            }\r\n            let title = document.getElementsByClassName('swal-title')[0];\r\n            title.style.display = 'none';\r\n            sendCommand(CommandTypes.update, { lastest: this.props.global.lastest }, data => {\r\n                let text = document.getElementsByClassName('swal-text')[0];\r\n                if(data === false) {\r\n                    text.innerText = 'Download update failed.';\r\n                    window.swal.getState().actions.confirm.closeModal = true;\r\n                    window.swal.getState().actions.cancel.closeModal = true;\r\n                    window.swal.stopLoading();\r\n                    return;\r\n                }\r\n                if(data === true) {\r\n                    text.innerText = 'Update successfully. Restart takes effect';\r\n                    window.swal.getState().actions.confirm.closeModal = true;\r\n                    window.swal.getState().actions.cancel.closeModal = true;\r\n                    window.swal.stopLoading();\r\n\r\n                    let confirmBtn = document.querySelectorAll('.swal-button.swal-button--confirm');\r\n                    if(confirmBtn.length > 0) {\r\n                        confirmBtn[0].addEventListener('click', ev => {\r\n                            sendCommandSync(CommandTypes.restart, null);\r\n                        });\r\n                    }\r\n                    return;\r\n                }\r\n                text.innerText = `Update ... (${data * 100}%)`;\r\n            });\r\n        })\r\n    }\r\n\r\n    handleLogin(email, password, errHandler) {\r\n        sendCommandOnce(CommandTypes.login, {\r\n            email,\r\n            password\r\n        }, ret => {\r\n            if(ret) {\r\n                localStorage.setItem('m5sso_email', email);\r\n                localStorage.setItem('m5sso_password', password);\r\n                window.swal.close();\r\n\r\n                window.swal({\r\n                    text: `Welcome ${email}`,\r\n                    icon: 'success',\r\n                });\r\n\r\n                this.props.setLoginState({isLogin: true, ssoToken: ret});\r\n            } else {\r\n                errHandler()\r\n            }\r\n        })\r\n    }\r\n\r\n    handleLogout() {\r\n        window.swal({\r\n            title: 'Logout',\r\n            text: 'Do you sure to logout?',\r\n            icon: 'warning',\r\n            buttons: {\r\n                confirm: {\r\n                    text: 'Yes',\r\n                    value: true\r\n                },\r\n                cancel: {\r\n                    text: 'No',\r\n                    value: false,\r\n                    visible: true\r\n                }\r\n            }\r\n        })\r\n        .then(ret => {\r\n            if(ret) {\r\n                sendCommandOnce(CommandTypes.logout, null, () => {\r\n                    this.props.setLoginState({isLogin: false, ssoToken: ''});\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    handleGotoRegister() {\r\n        shell.openExternal('https://forum.m5stack.com/register');\r\n    }\r\n\r\n    handleGotoReset() {\r\n        shell.openExternal('https://forum.m5stack.com/reset');\r\n    }\r\n\r\n    handleGotoDeviceManagement() {\r\n        shell.openExternal('https://devm.m5stack.com/' + `?sid=${this.props.global.ssoToken}`);\r\n    }\r\n\r\n    openLoginForm() {\r\n        let container = document.createElement('div');\r\n        ReactDOM.render(<LoginForm\r\n            onLogin={this.handleLogin.bind(this)}\r\n            gotoRegister={this.handleGotoRegister.bind(this)}\r\n            gotoReset={this.handleGotoReset.bind(this)}\r\n        />, container);\r\n        window.swal({\r\n            className: 'wifi-modal',\r\n            content: container,\r\n            closeOnEsc: false,\r\n            closeOnClickOutside: false,\r\n            buttons: {}\r\n        })\r\n    }\r\n\r\n    checkVersion() {\r\n        const { version, lastest } = this.props.global;\r\n        if(lastest > version ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        let loginedEmail = localStorage.getItem('m5sso_email') || '';\r\n        let needUpdate = this.checkVersion();\r\n        return (\r\n            <div className=\"app-top-bar\">\r\n                <div className=\"logo\">\r\n                    <img className=\"topbar-logo\" src=\"assets/images/logo.png\" />\r\n                    <span>M5Burner</span>\r\n                </div>\r\n                <div className=\"control-box\">\r\n                    {\r\n                        this.props.global.loginState\r\n                        ? (\r\n                            <>\r\n                                <button className=\"btn-control btn-user\">\r\n                                    <i className=\"iconfont icon-user\"></i>\r\n                                    <span>{loginedEmail}</span>\r\n\r\n                                    <div className=\"menu\">\r\n                                        <p onClick={this.handleGotoDeviceManagement}>\r\n                                            <i className=\"iconfont icon-device\"></i>\r\n                                            <span>Device Management</span>\r\n                                        </p>\r\n                                    </div>\r\n                                </button>\r\n                                <button className=\"btn-control btn-user\" onClick={this.handleLogout}>\r\n                                    <i className=\"iconfont icon-log-out\"></i>\r\n                                </button>\r\n                            </>\r\n                        )\r\n                        : <button className=\"btn-control btn-user\" onClick={this.openLoginForm}>\r\n                            <i className=\"iconfont icon-user\"></i>\r\n                        </button>\r\n                    }\r\n                    \r\n                    <button\r\n                        className={cs('btn-control', 'btn-setting', needUpdate ? 'notice' : '')}\r\n                        onClick={this.openPreferencePanel}\r\n                    >\r\n                        <i className=\"iconfont icon-setting\"></i>\r\n                    </button>\r\n                    <button className=\"btn-control btn-min\" onClick={this.minimize}>\r\n                        <i className=\"iconfont icon-zuixiaohua\"></i>\r\n                    </button>\r\n                    <button className=\"btn-control btn-max\" onClick={this.maximize}>\r\n                        <i className=\"iconfont icon-zuidahua\"></i>\r\n                    </button>\r\n                    <button className=\"btn-control btn-close\" onClick={this.quit}>\r\n                        <i className=\"iconfont icon-guanbi\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        modal: state.modal,\r\n        global: state.global\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        openModal: component => dispatch(openModal({ component })),\r\n        hideModal: _ => dispatch(setAnimation({animation: AnimationState.FADE_OUT})),\r\n        setTheme: theme => dispatch(setTheme({ theme })),\r\n        setBurnParams: (key, value) => dispatch(setBurnParams({[key]: value})),\r\n        setLoginState: loginInfo => dispatch(setLoginState({loginState: loginInfo.isLogin, ssoToken: loginInfo.ssoToken}))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);","import Component from './TopBar';\r\n\r\nexport default Component;","import React from 'react';\r\nimport cs from 'classnames';\r\n\r\nfunction HeaderFormSelector(props) {\r\n    let { icon, field, value, options, onChange, onClick } = props;\r\n    return (\r\n        <li className=\"header-form-item\">\r\n            <i className={cs('iconfont', icon)}></i>\r\n            <span>{field}:</span>\r\n            <select value={value} onChange={onChange} onClick={onClick}>\r\n                {\r\n                    options.map(opt => {\r\n                        return (<option key={opt} value={opt}>{opt}</option>)\r\n                    })\r\n                }\r\n            </select>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default HeaderFormSelector;","import React, { useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './SerialLog.scss';\r\n\r\nfunction SerialLog(props) {\r\n    const logRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        logRef.current.scrollTo(0, logRef.current.scrollHeight);\r\n    }, [props.stdout.message]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrapper-serial-log\" ref={logRef}>\r\n                <pre>{props.stdout.message}</pre>\r\n            </div>\r\n            { props.footer }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        stdout: state.stdout\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SerialLog);","import SerialLog from './SerialLog';\r\n\r\nexport default SerialLog;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { sendCommand, CommandTypes, sendCommandOnce } from '../../ipc/events';\r\nimport { AnimationState, BaudrateOptions } from '../../constants';\r\nimport { HeaderFormSelector } from '../HeaderFormItem';\r\nimport SerialLog from '../SerialLog';\r\nimport { setLoginState } from '../../actions/global.action';\r\nimport { openModal, setAnimation } from '../../actions/modal.action';\r\nimport { setBaudrate, setCOM } from '../../actions/burn.action';\r\nimport { startStdout, appendStdout } from '../../actions/stdout.action';\r\n\r\nimport './HeaderForm.scss';\r\n\r\nconst electron = window.require('electron');\r\nconst { ipcRenderer } = electron;\r\n\r\nclass HeaderForm extends React.Component {\r\n\r\n    bindLock = false;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            coms: [],\r\n            ssid: localStorage.getItem('ssid') || '',\r\n            password: localStorage.getItem('password') || '',\r\n            passwordVisible: false\r\n        }\r\n\r\n        this.changeCOMHandler = this.changeCOMHandler.bind(this);\r\n        this.changeBaudrateHandler = this.changeBaudrateHandler.bind(this);\r\n        this.refreshCOMs = this.refreshCOMs.bind(this);\r\n        this.erase = this.erase.bind(this);\r\n        this.watchCOM = this.watchCOM.bind(this);\r\n        this.updateSSID = this.updateSSID.bind(this);\r\n        this.updatePassword = this.updatePassword.bind(this);\r\n        this.togglePasswordVisible = this.togglePasswordVisible.bind(this);\r\n        this.bindDevice = this.bindDevice.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this._getPorts();\r\n    }\r\n\r\n    _getPorts() {\r\n        sendCommand(CommandTypes.getPorts, null, data => {\r\n            this.setState({\r\n                coms: data.map(port => port.path)\r\n            }, () => {\r\n                if(data.length > 0 && this.props.com === '') {\r\n                    this.props.setCOM(this.state.coms[0]);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    refreshCOMs(ev) {\r\n        this._getPorts();\r\n        if(this.props.com !== ev.target.value) {\r\n            this.props.setCOM(ev.target.value);\r\n        }\r\n    }\r\n\r\n    changeCOMHandler(ev) {\r\n        this.props.setCOM(ev.target.value);\r\n    }\r\n\r\n    changeBaudrateHandler(ev) {\r\n        this.props.setBaudrate(ev.target.value);\r\n        sendCommand(CommandTypes.saveConfig, { key: 'baudrate', value: ev.target.value });\r\n    }\r\n\r\n    erase(ev) {\r\n        ev.preventDefault();\r\n\r\n        let closeModalHandler = this.props.closeModal;\r\n        const footerButtons = (function() {\r\n            return(\r\n                <>\r\n                    <div className=\"footer-btn\">\r\n                        <button onClick={() => {\r\n                            ipcRenderer.send(CommandTypes.killTask);\r\n                            closeModalHandler();\r\n                        }}>Close</button>\r\n                    </div>\r\n                </>\r\n            )\r\n        })();\r\n\r\n        this.props.openModal(\r\n            <SerialLog footer={footerButtons}/>\r\n        );\r\n\r\n        this.props.startStdoutMessage('=================\\nErase now\\n=================\\n');\r\n        sendCommand(CommandTypes.erase, { com: this.props.com }, data => {\r\n            this.props.appendStdoutMessage(data);\r\n        });\r\n    }\r\n\r\n    watchCOM(ev) {\r\n        ev.preventDefault();\r\n\r\n        let _this = this;\r\n        let closeModalHandler = this.props.closeModal;\r\n        const footerButtons = (function() {\r\n\r\n            const sendHandler = () => {\r\n                let content = document.getElementById('_sendbox').value;\r\n                sendCommand(CommandTypes.writeCOM, {\r\n                    com: _this.props.com,\r\n                    data: content\r\n                }, null);\r\n            }\r\n\r\n            const resetHandler = () => {\r\n                sendCommand(CommandTypes.resetDevice, {\r\n                    com: _this.props.com\r\n                }, null);\r\n            }\r\n\r\n            const keydownHandler = (ev) => {\r\n                if(ev.charCode === 13 && ev.ctrlKey) {\r\n                    sendHandler();\r\n                }\r\n            }\r\n\r\n            return(\r\n                <>\r\n                    <div className=\"footer-btn\">\r\n                        <textarea id=\"_sendbox\" className=\"sendbox\" type=\"text\" onKeyPress={keydownHandler}></textarea>\r\n                        <button className=\"reset\" onClick={resetHandler}>Reset</button>\r\n                        <button className=\"send\" onClick={sendHandler}>Send</button>\r\n                        <button onClick={() => {\r\n                            if(ipcRenderer.eventNames().includes(`${CommandTypes.watchCOM}Callback`)) {\r\n                                sendCommand(CommandTypes.closeCOM, null);\r\n                            }\r\n                            closeModalHandler();\r\n                        }}>Close</button>\r\n                    </div>\r\n                </>\r\n            )\r\n        })();\r\n\r\n        this.props.openModal(<SerialLog footer={footerButtons} com={this.props.com} />);\r\n\r\n        this.props.startStdoutMessage(`=================\\n${this.props.com}\\n=================\\n`);\r\n        sendCommand(CommandTypes.watchCOM, { com: this.props.com }, data => {\r\n            this.props.appendStdoutMessage(data);\r\n        });\r\n    }\r\n\r\n    updateSSID(ev) {\r\n        this.setState({\r\n            ssid: ev.target.value\r\n        });\r\n        localStorage.setItem('ssid', ev.target.value);\r\n    }\r\n\r\n    updatePassword(ev) {\r\n        this.setState({\r\n            password: ev.target.value\r\n        });\r\n        localStorage.setItem('password', ev.target.value);\r\n    }\r\n\r\n    togglePasswordVisible() {\r\n        this.setState({\r\n            passwordVisible: !this.state.passwordVisible\r\n        })\r\n    }\r\n\r\n    bindDevice(ev) {\r\n        ev.preventDefault();\r\n\r\n        window.swal({\r\n            title: '',\r\n            text: 'Adding device, wait a minute...',\r\n            icon: 'warning',\r\n            closeOnClickOutside: false,\r\n            closeOnEsc: false,\r\n            buttons: false\r\n        })\r\n\r\n        sendCommandOnce(CommandTypes.bindDevice, {\r\n            com: this.props.com\r\n        }, ret => {\r\n            if(ret === -1) {\r\n                // 身份验证过期\r\n                this.props.setLoginState(false);\r\n                window.swal({\r\n                    title: '',\r\n                    text: 'The login status has expired, please log in again',\r\n                    icon: 'warning'\r\n                })\r\n                return;\r\n            }\r\n            else if(ret === false) {\r\n                window.swal({\r\n                    title: '',\r\n                    text: 'Invalid device',\r\n                    icon: 'error'\r\n                })\r\n            }\r\n            else if(ret === true) {\r\n                window.swal({\r\n                    title: '',\r\n                    text: 'Device has been added in your account.',\r\n                    icon: 'success'\r\n                })\r\n            }\r\n            else if(ret === -1000) {\r\n                window.swal({\r\n                    title: '',\r\n                    text: 'Network occured errors',\r\n                    icon: 'error'\r\n                })\r\n            }\r\n            else if(ret === 400) {\r\n                window.swal({\r\n                    className: 'binding-tip-modal',\r\n                    title: '',\r\n                    text: 'This device has been bound, try again after unbinding.',\r\n                    icon: 'error'\r\n                })\r\n            }\r\n            else {\r\n                window.swal({\r\n                    title: '',\r\n                    text: 'Network occured errors',\r\n                    icon: 'error'\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { com, baudrate } = this.props;\r\n        \r\n        return (\r\n            <form className=\"header-form\">\r\n                <HeaderFormSelector\r\n                    icon='icon-usb'\r\n                    field='COM'\r\n                    value={com}\r\n                    options={this.state.coms}\r\n                    onChange={this.changeCOMHandler.bind(this)}\r\n                    onClick={this.refreshCOMs.bind(this)}\r\n                />\r\n                <HeaderFormSelector\r\n                    icon=''\r\n                    field='Baudrate'\r\n                    value={baudrate}\r\n                    options={BaudrateOptions}\r\n                    onChange={this.changeBaudrateHandler}\r\n                />\r\n                <button className=\"btn erase\" onClick={this.erase}>\r\n                    <i className=\"iconfont icon-erase\"></i>\r\n                    <span>Erase</span>\r\n                </button>\r\n                <button className=\"btn open\" onClick={this.watchCOM}>\r\n                    <i className=\"iconfont icon-usb\"></i>\r\n                    <span>COM Monitor</span>\r\n                </button>\r\n                {\r\n                    this.props.global.loginState\r\n                    ? <button className=\"btn bind\" onClick={this.bindDevice}>\r\n                        <i className=\"iconfont icon-bind\"></i>\r\n                        <span>Bind with account</span>\r\n                    </button>\r\n                    : null\r\n                }\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        com: state.burn.com,\r\n        global: state.global,\r\n        baudrate: state.burn.baudrate\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        openModal: component => dispatch(openModal({component})),\r\n        closeModal: _ => dispatch(setAnimation({animation: AnimationState.FADE_OUT})),\r\n        setBaudrate: baudrate => dispatch(setBaudrate({baudrate})),\r\n        setCOM: com => dispatch(setCOM({com})),\r\n        startStdoutMessage: message => dispatch(startStdout({message})),\r\n        appendStdoutMessage: message => dispatch(appendStdout({message})),\r\n        setLoginState: loginState => dispatch(setLoginState({loginState}))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderForm);","import HeaderForm from './HeaderForm';\r\n\r\nexport default HeaderForm;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HeaderForm from '../../components/HeaderForm';\r\n\r\nimport './Header.scss';\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app-header\">\r\n                <HeaderForm />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import Component from './Header';\r\n\r\nexport default Component;","import React, { useEffect, useRef } from 'react';\r\nimport cs from 'classnames';\r\n\r\nimport './DeviceList.scss';\r\n\r\nfunction alias(name) {\r\n    if(name === 'stickv') {\r\n        return 'stickv & unitv';\r\n    }\r\n    else if(name === 'core2') {\r\n        return 'core2 & tough';\r\n    }\r\n    return name;\r\n}\r\n\r\nfunction DeviceList(props) {\r\n    const { owns, selected, setSelected } = props;\r\n    const treeRef = useRef();\r\n    const topArrowRef = useRef();\r\n    const bottomArrowRef = useRef();\r\n\r\n    useEffect(() => {\r\n        treeRef.current.addEventListener('scroll', ev => {\r\n            console.log(ev);\r\n            if(treeRef.current.scrollTop === 0) {\r\n                topArrowRef.current.classList.remove('show');\r\n                bottomArrowRef.current.classList.add('show');\r\n            }\r\n            else if(treeRef.current.scrollTop === 764) {\r\n                topArrowRef.current.classList.add('show');\r\n                bottomArrowRef.current.classList.remove('show');\r\n            }\r\n            else {\r\n                topArrowRef.current.classList.add('show');\r\n                bottomArrowRef.current.classList.add('show');\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const devices = [\r\n        {\r\n            name: 'core',\r\n            light: 'light-core.png',\r\n            dark: 'dark-core.png'\r\n        },\r\n        {\r\n            name: 'core2',\r\n            light: 'light-tough.png',\r\n            dark: 'dark-tough.png'\r\n        },\r\n        {\r\n            name: 'stickc',\r\n            light: 'light-stickc.png',\r\n            dark: 'dark-stickc.png'\r\n        },\r\n        {\r\n            name: 'atom',\r\n            light: 'light-atom.png',\r\n            dark: 'dark-atom.png'\r\n        },\r\n        {\r\n            name: 'stickv',\r\n            light: 'light-stickv.png',\r\n            dark: 'dark-stickv.png'\r\n        },\r\n        {\r\n            name: 'timercam',\r\n            light: 'light-timercam.png',\r\n            dark: 'dark-timercam.png'\r\n        },\r\n        {\r\n            name: 'coreink',\r\n            light: 'light-coreink.png',\r\n            dark: 'dark-coreink.png'\r\n        },\r\n        {\r\n            name: 'paper',\r\n            light: 'light-paper.png',\r\n            dark: 'dark-paper.png'\r\n        },\r\n        {\r\n            name: 'stamp',\r\n            light: 'light-stamp.png',\r\n            dark: 'dark-stamp.png'\r\n        }\r\n    ];\r\n\r\n    const list = devices.map(device => {\r\n        return (\r\n            <li\r\n                key={device.name}\r\n                className={cs('item-device', selected === device.name ? 'selected' : '')}\r\n                onClick={() => setSelected(device.name)}\r\n            >\r\n                <figure>\r\n                    <img className=\"avatar\" src={'./assets/images/' + device.light} alt={device.name} draggable=\"false\" />\r\n                    <figcaption>{ alias(device.name).toUpperCase() }</figcaption>\r\n                    {/* <span className=\"own-count\">3</span> */}\r\n                </figure>\r\n            </li>\r\n        )\r\n    });\r\n    \r\n    return (\r\n        <div className=\"list-device-wrapper\">\r\n            <div className=\"top-arrow\" ref={topArrowRef}>\r\n                <img src={'./assets/images/top-arrow.png'} alt=\"top\" />\r\n            </div>\r\n            <ul className=\"list-device\" ref={treeRef}>\r\n                { list }\r\n            </ul>\r\n            <div className=\"bottom-arrow show\" ref={bottomArrowRef}>\r\n                <img src={'./assets/images/bottom-arrow.png'} alt=\"bottom\" />\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default DeviceList;","import DeviceList from './DeviceList';\r\n\r\nexport default DeviceList;","import React from 'react';\r\n\r\nimport './Searchbox.scss';\r\n\r\nfunction Searchbox(props) {\r\n    let { onChange } = props;\r\n    return (\r\n        <div className=\"search-box\">\r\n            <input placeholder=\"Search ... \" onChange={onChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchbox;","import Searchbox from './Searchbox';\r\n\r\nexport default Searchbox;","import ConfigForm from './ConfigForm';\r\n\r\nexport default ConfigForm;","import React, { useState } from 'react';\r\n\r\nimport './ConfigForm.scss';\r\n\r\nconst ConfigForm = props => {\r\n    let [option, setOption] = useState(props.data);\r\n    let [passwordVisible, setPasswordVisible] = useState(false);\r\n    let [copyState, setCopyState] = useState(false);\r\n    const copyHandler = apikey => {\r\n        new window['ClipboardJS']('#copy_uiflow_apikey', {\r\n            text: function() {\r\n                return apikey;\r\n            }\r\n        });\r\n        setCopyState(true);\r\n    }\r\n    return (\r\n        <div className=\"config-form\">\r\n            <h3>UIFlow Config</h3>\r\n            <table className=\"data-table\">\r\n                <tbody>\r\n                    <tr className=\"field apikey\">\r\n                        <td className=\"key\">ApiKey:</td>\r\n                        <td>\r\n                            <span id=\"uiflow_apikey\">{ option.apikey }</span>\r\n                            <img\r\n                                id=\"copy_uiflow_apikey\"\r\n                                className=\"copy\"\r\n                                src=\"./assets/images/copy.png\"\r\n                                onClick={() => copyHandler(option.apikey)}\r\n                            />\r\n                            {\r\n                                copyState\r\n                                ? <span className=\"text-copy\">copied!</span>\r\n                                : null\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"field mode\">\r\n                        <td className=\"key\">Start Mode:</td>\r\n                        <td>\r\n                            <select value={option.start} onChange={ev => setOption({...option, start: +ev.target.value})}>\r\n                                <option value=\"0\">Internet Mode</option>\r\n                                <option value=\"1\">USB Mode</option>\r\n                                <option value=\"2\">App Mode</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"field hold\">\r\n                        <td className=\"key\">Boot Menu:</td>\r\n                        <td>\r\n                            <select\r\n                                value={option['startup-hold']}\r\n                                onChange={ev => setOption({...option, 'startup-hold': ev.target.value === 'false' ? false : true})}\r\n                            >\r\n                                <option value=\"true\">True</option>\r\n                                <option value=\"false\">False</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"field server\">\r\n                        <td className=\"key\">Server:</td>\r\n                        <td>\r\n                            <select value={option['server']} onChange={ev => setOption({...option, server: ev.target.value})}>\r\n                                <option value=\"flow.m5stack.com\">flow.m5stack.com</option>\r\n                                <option value=\"sg.flow.m5stack.com\">sg.flow.m5stack.com</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"field wifi\">\r\n                        <td className=\"key\">Wifi:</td>\r\n                        <td>\r\n                            <div className=\"wifi-item\">\r\n                                <div className=\"inputbox\">\r\n                                    <span>SSID</span>\r\n                                    <input\r\n                                        defaultValue={option.wifi[0]}\r\n                                        onChange={ev => setOption({...option, wifi: [ev.target.value, option.wifi[1]]})}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"inputbox password\">\r\n                                    <span>Password</span>\r\n                                    <input\r\n                                        type={!passwordVisible ? 'password' : 'text'}\r\n                                        defaultValue={option.wifi[1]}\r\n                                        onChange={ev => setOption({...option, wifi: [option.wifi[0], ev.target.value]})}\r\n                                    />\r\n                                    <img\r\n                                        onClick={() => setPasswordVisible(!passwordVisible)}\r\n                                        className=\"btn-eye\"\r\n                                        src={passwordVisible ? './assets/images/hide.png' : './assets/images/show.png'}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    {\r\n                        props.deviceType === 'core'\r\n                        ?\r\n                        <>\r\n                            <tr className=\"field comx\">\r\n                                <td className=\"key\">COM.X:</td>\r\n                                <td>\r\n                                    <select value={option['COMX']} onChange={ev => setOption({...option, COMX: ev.target.value})}>\r\n                                        <option value=\"false\">False</option>\r\n                                        <option value=\"true\">True</option>\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                            <tr className=\"field apn\">\r\n                                <td className=\"key\">APN:</td>\r\n                                <td>\r\n                                    <input\r\n                                        defaultValue={option.APN}\r\n                                        onChange={ev => setOption({...option, APN: ev.target.value})}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                        </>\r\n                        : null\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <div className=\"footer\">\r\n                <button className=\"btn-close\" onClick={props.onClose}>Cancel</button>\r\n                <button className=\"btn-save\" onClick={() => props.onSave(option)}>Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfigForm;","import React from 'react';\r\n\r\nimport './Loading.scss';\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div className=\"ball-pulse-sync\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}","import Loading from './Loading';\r\n\r\nexport default Loading;","import WifiInput from './WifiInput';\r\n\r\nexport default WifiInput;","import React, { useState } from 'react';\r\n\r\nimport './WifiInput.scss';\r\n\r\nexport default () => {\r\n    const [ssid, setSSID] = useState(localStorage.getItem('ssid') || '');\r\n    const [pwd, setPwd] = useState(localStorage.getItem('password') || '');\r\n    const [pwdVisible, setPwdVisible] = useState(false);\r\n    const togglePwdVisible = () => setPwdVisible(!pwdVisible);\r\n    const saveSSID = ev => {\r\n        setSSID(ev.target.value);\r\n        localStorage.setItem('ssid', ev.target.value);\r\n    }\r\n    const savePwd = ev => {\r\n        setPwd(ev.target.value);\r\n        localStorage.setItem('password', ev.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <table className=\"wrapper-wifibox\">\r\n                <tbody>\r\n                    <tr className=\"wifibox-item\">\r\n                        <td>SSID:</td>\r\n                        <td>\r\n                            <input type=\"text\" value={ssid} onChange={saveSSID} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"wifibox-item password\">\r\n                        <td>Password:</td>\r\n                        <td>\r\n                            <input type={!pwdVisible?\"password\":\"text\"} value={pwd} onChange={savePwd} />\r\n                            <img\r\n                                className=\"btn-eye\"\r\n                                src={!pwdVisible ? \"./assets/images/show.png\" : \"./assets/images/hide.png\"}\r\n                                onClick={togglePwdVisible}\r\n                                alt=\"\"\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport './DataDemoTextBox.scss';\r\n\r\nexport default props => {\r\n    return (\r\n        <textarea className=\"demo-text-area\" disabled={false} value={props.value} readOnly></textarea>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport './TimerCamCfg.scss';\r\n\r\nconst IMAGE_SIZE_ENUM = [\r\n    '96x96',\r\n    '160x120',\r\n    '176x144',\r\n    '240x176',\r\n    '240x240',\r\n    '320x240',\r\n    '400x296',\r\n    '480x320',\r\n    '640x480',\r\n    '800x600',\r\n    '1024x768',\r\n    '1280x720',\r\n    '1280x1024',\r\n    '1600x1200',\r\n];\r\n\r\nexport default props => {\r\n    const [ssid, setSSID] = useState(localStorage.getItem('ssid') || '');\r\n    const [pwd, setPwd] = useState(localStorage.getItem('password') || '');\r\n    const [accessKey, setAccessKey] = useState('');\r\n    const [accessKeySecret, setAccessKeySecret] = useState('');\r\n    const [serverAddr, setServerAddr] = useState('');\r\n    const [bucket, setBucket] = useState('');\r\n    const [wakeTime, setWakeTime] = useState(30);\r\n    const [imageSize, setImageSize] = useState(5);\r\n    const [pwdVisible, setPwdVisible] = useState(false);\r\n    const togglePwdVisible = () => setPwdVisible(!pwdVisible);\r\n    const saveSSID = ev => {\r\n        setSSID(ev.target.value);\r\n        localStorage.setItem('ssid', ev.target.value);\r\n    }\r\n    const savePwd = ev => {\r\n        setPwd(ev.target.value);\r\n        localStorage.setItem('password', ev.target.value);\r\n    }\r\n    const handleBlur = ev => {\r\n        if(ev.target.value === '') {\r\n            setWakeTime(30);\r\n        }\r\n        if(ev.target.value > 15240) {\r\n            setWakeTime(15240);\r\n        }\r\n        if(ev.target.value < 30) {\r\n            setWakeTime(30);\r\n        }\r\n    }\r\n    const ImageSizeList = (() => {\r\n        return IMAGE_SIZE_ENUM.map((size, index) => <option key={index} value={index}>{size}</option>);\r\n    })();\r\n\r\n    return (\r\n        <>\r\n            <table className=\"wrapper-timercambox\">\r\n                <tbody>\r\n                    <tr className=\"wifibox-item\">\r\n                        <td className=\"field-name\">SSID:</td>\r\n                        <td>\r\n                            <input id=\"timercam__config__ssid\" type=\"text\" value={ssid} onChange={saveSSID} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"wifibox-item password\">\r\n                        <td className=\"field-name\">Password:</td>\r\n                        <td>\r\n                            <input id=\"timercam__config__password\" type={!pwdVisible?\"password\":\"text\"} value={pwd} onChange={savePwd} />\r\n                            <img\r\n                                className=\"btn-eye\"\r\n                                src={!pwdVisible ? \"./assets/images/show.png\" : \"./assets/images/hide.png\"}\r\n                                onClick={togglePwdVisible}\r\n                                alt=\"\"\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"wifibox-item\">\r\n                        <td className=\"field-name\">Wake Time:</td>\r\n                        <td>\r\n                            <input\r\n                                id=\"timercam__config__waketime\"\r\n                                type=\"number\"\r\n                                value={wakeTime}\r\n                                onChange={ev => setWakeTime(ev.target.value)}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                            <span>sec (30 ~ 15240)</span>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"wifibox-item\">\r\n                        <td className=\"field-name\">Image Size:</td>\r\n                        <td>\r\n                            <select id=\"timercam__config__imagesize\" value={imageSize} onChange={ev => setImageSize(ev.target.value)}>\r\n                                {ImageSizeList}\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    {\r\n                        props.firmware == 'TimerCamAliyun'?\r\n                        <>\r\n                        <tr className=\"wifibox-item\">\r\n                            <td></td>\r\n                            <td style={{padding:0}}>\r\n                                <span style={{'fontSize':12,color:'#989898'}}>\r\n                                    The following options refer to\r\n                                    <a style={{marginLeft:4,cursor:'pointer',textDecoration:'underline'}}\r\n                                        onClick={() => props.gotoRefer('https://help.aliyun.com/document_detail/53045.html')}>Aliyun OSS Document</a>\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr className=\"wifibox-item\">\r\n                            <td className=\"field-name\">Access Key:</td>\r\n                            <td>\r\n                                <input\r\n                                    id=\"timercam__config__access_key\"\r\n                                    type=\"text\"\r\n                                    value={accessKey}\r\n                                    onChange={ev => setAccessKey(ev.target.value)}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        \r\n                        <tr className=\"wifibox-item\">\r\n                            <td className=\"field-name\">Access Key Secret:</td>\r\n                            <td>\r\n                                <input\r\n                                    id=\"timercam__config__access_key_secret\"\r\n                                    type=\"text\"\r\n                                    value={accessKeySecret}\r\n                                    onChange={ev => setAccessKeySecret(ev.target.value)}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        \r\n                        <tr className=\"wifibox-item\">\r\n                            <td className=\"field-name\">Server Address:</td>\r\n                            <td>\r\n                                <input\r\n                                    id=\"timercam__config__server_address\"\r\n                                    type=\"text\"\r\n                                    value={serverAddr}\r\n                                    onChange={ev => setServerAddr(ev.target.value)}\r\n                                    placeholder=\"eg: oss-cn-shenzhen.aliyuncs.com\"\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        \r\n                        <tr className=\"wifibox-item\">\r\n                            <td className=\"field-name\">Bucket:</td>\r\n                            <td>\r\n                                <input\r\n                                    id=\"timercam__config__bucket\"\r\n                                    type=\"text\"\r\n                                    value={bucket}\r\n                                    onChange={ev => setBucket(ev.target.value)}\r\n                                    placeholder=\"eg: m5stack-timer-cam\"\r\n                                />\r\n                            </td>\r\n                        </tr></>:null\r\n                    }\r\n                    \r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport './ImageWallPaperCfg.scss';\r\n\r\nexport default () => {\r\n    const [ssid, setSSID] = useState(localStorage.getItem('ssid') || '');\r\n    const [pwd, setPwd] = useState(localStorage.getItem('password') || '');\r\n    const [wakeTime, setWakeTime] = useState(60);\r\n    const [url, setUrl] = useState('');\r\n    const [invalidState, setInvalidState] = useState(false);\r\n    const [pwdVisible, setPwdVisible] = useState(false);\r\n    const togglePwdVisible = () => setPwdVisible(!pwdVisible);\r\n    const saveSSID = ev => {\r\n        setSSID(ev.target.value);\r\n        localStorage.setItem('ssid', ev.target.value);\r\n    }\r\n    const savePwd = ev => {\r\n        setPwd(ev.target.value);\r\n        localStorage.setItem('password', ev.target.value);\r\n    }\r\n    const handleUpdateUrl = ev => {\r\n        if(ev.target.value === '') {\r\n            setInvalidState(false);\r\n        }\r\n        setUrl(ev.target.value);\r\n    }\r\n    const handleImageLoaded = ev => {\r\n        setInvalidState(false);\r\n        document.getElementById('__preview__imagewp').style.display = 'inline-block';\r\n    }\r\n    const handlePreviewError = err => {\r\n        setInvalidState(true);\r\n        document.getElementById('__preview__imagewp').style.display = 'none';\r\n    }\r\n    const handleBlur = ev => {\r\n        if(ev.target.value === '') {\r\n            setWakeTime(30);\r\n        }\r\n        if(ev.target.value > 172800) {\r\n            setWakeTime(172800);\r\n        }\r\n        if(ev.target.value < 60) {\r\n            setWakeTime(60);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <table className=\"wrapper-timercambox\">\r\n                <tbody>\r\n                    <tr className=\"wifibox-item\">\r\n                        <td className=\"field-name\">SSID:</td>\r\n                        <td>\r\n                            <input id=\"imagewp__config__ssid\" type=\"text\" value={ssid} onChange={saveSSID} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"wifibox-item password\">\r\n                        <td className=\"field-name\">Password:</td>\r\n                        <td>\r\n                            <input id=\"imagewp__config__password\" type={!pwdVisible?\"password\":\"text\"} value={pwd} onChange={savePwd} />\r\n                            <img\r\n                                className=\"btn-eye\"\r\n                                src={!pwdVisible ? \"./assets/images/show.png\" : \"./assets/images/hide.png\"}\r\n                                onClick={togglePwdVisible}\r\n                                alt=\"\"\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"wifibox-item\">\r\n                        <td className=\"field-name\">\r\n                            <p>Image Url:</p>\r\n                            <p>(JPG Only)</p>\r\n                        </td>\r\n                        <td>\r\n                            <input id=\"imagewp__config__url\" type=\"text\" value={url} onChange={ev => handleUpdateUrl(ev)} />\r\n                            {\r\n                                url !== ''\r\n                                ?\r\n                                <img id=\"__preview__imagewp\" height=\"200\" style={{'marginTop': 10}} src={url}\r\n                                    onLoad={ev => handleImageLoaded(ev)}\r\n                                    onError={err => handlePreviewError(err)}\r\n                                />\r\n                                : null\r\n                            }\r\n                            {\r\n                                invalidState\r\n                                ? <p style={{fontSize: 12, color: 'red', marginTop: 6}}>Invalid Image Url</p>\r\n                                : null\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"wifibox-item\">\r\n                        <td className=\"field-name\">Wake Time:</td>\r\n                        <td>\r\n                            <input\r\n                                id=\"imagewp__config__waketime\"\r\n                                type=\"number\"\r\n                                value={wakeTime}\r\n                                onChange={ev => setWakeTime(ev.target.value)}\r\n                                onBlur={handleBlur}\r\n                            />\r\n                            <span>sec (60 ~ 172800)</span>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport './PaperWeatherStationCfg.scss';\r\n\r\nexport default props => {\r\n    const [ssid, setSSID] = useState(localStorage.getItem('ssid') || '');\r\n    const [pwd, setPwd] = useState(localStorage.getItem('password') || '');\r\n    const [latitude, setLatitude] = useState(localStorage.getItem('paperws_latitude') || '');\r\n    const [longitude, setLongitude] = useState(localStorage.getItem('paperws_longitude') || '');\r\n    const [language, setLanguage] = useState('en_US');\r\n    const [apikey, setApikey] = useState('');\r\n    const [pwdVisible, setPwdVisible] = useState(false);\r\n    const togglePwdVisible = () => setPwdVisible(!pwdVisible);\r\n    const saveSSID = ev => {\r\n        setSSID(ev.target.value);\r\n        localStorage.setItem('ssid', ev.target.value);\r\n    }\r\n    const savePwd = ev => {\r\n        setPwd(ev.target.value);\r\n        localStorage.setItem('password', ev.target.value);\r\n    }\r\n    const saveLatitude = ev => {\r\n        setLatitude(ev.target.value);\r\n        localStorage.setItem('paperws_latitude', ev.target.value);\r\n    }\r\n    const saveLongitude = ev => {\r\n        setLongitude(ev.target.value);\r\n        localStorage.setItem('paperws_longitude', ev.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <table className=\"wrapper-timercambox\">\r\n                <tbody>\r\n                    <tr className=\"wifibox-item\">\r\n                        <td className=\"field-name\">SSID:</td>\r\n                        <td>\r\n                            <input id=\"paperws__config__ssid\" type=\"text\" value={ssid} onChange={saveSSID} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"wifibox-item password\">\r\n                        <td className=\"field-name\">Password:</td>\r\n                        <td>\r\n                            <input id=\"paperws__config__password\" type={!pwdVisible?\"password\":\"text\"} value={pwd} onChange={savePwd} />\r\n                            <img\r\n                                className=\"btn-eye\"\r\n                                src={!pwdVisible ? \"./assets/images/show.png\" : \"./assets/images/hide.png\"}\r\n                                onClick={togglePwdVisible}\r\n                                alt=\"\"\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"wifibox-item\">\r\n                        <td className=\"field-name\">Language:</td>\r\n                        <td>\r\n                            <select id=\"paperws__config__language\" value={language} onChange={ev => setLanguage(ev.target.value)}>\r\n                                <option value=\"en_US\">English</option>\r\n                                <option value=\"zh_CN\">简体中文</option>\r\n                                <option value=\"ja\">日本語</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"wifibox-item\">\r\n                        <td className=\"field-name\">Longitude:</td>\r\n                        <td>\r\n                            <input\r\n                                id=\"paperws__config__longitude\"\r\n                                type=\"text\"\r\n                                value={longitude}\r\n                                placeholder=\"e.g. 98.765432\"\r\n                                onChange={saveLongitude}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"wifibox-item\">\r\n                        <td className=\"field-name\">Latitude:</td>\r\n                        <td>\r\n                            <input\r\n                                id=\"paperws__config__latitude\"\r\n                                type=\"text\" value={latitude}\r\n                                placeholder=\"e.g. 123.456789\"\r\n                                onChange={saveLatitude}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"wifibox-item\">\r\n                        <td className=\"field-name\">Apikey:</td>\r\n                        <td>\r\n                            <input  \r\n                                id=\"paperws__config__apikey\"\r\n                                type=\"text\"\r\n                                value={apikey}\r\n                                onChange={ev => setApikey(ev.target.value)}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"wifibox-item\">\r\n                        <td></td>\r\n                        <td style={{padding:0}}>\r\n                            <span style={{'fontSize':12,color:'#989898'}}>\r\n                                Apply to use the API here\r\n                                <a style={{marginLeft:4,cursor:'pointer',textDecoration:'underline'}}\r\n                                    onClick={() => props.gotoApplyApi('http://www.caiyun.org/')}>http://www.caiyun.org/</a>\r\n                            </span>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Qrcode from 'qrcode.react';\r\n\r\nimport './QRCode.scss';\r\n\r\nconst URL = 'http://api.m5stack.com:5003/timer-cam/image?tok='\r\n\r\nexport default props => {\r\n    return (\r\n        <div className=\"qrcode-modal\">\r\n            <h3>\r\n                <p>Token</p>\r\n                <p>{props.token}</p>\r\n            </h3>\r\n            <Qrcode value={URL + props.token} size={200} fgColor=\"#000000\" />\r\n            <h3>Scan QRCode to browser your image.</h3>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport './SmbTimerCamCfg.scss';\r\n\r\nconst IMAGE_SIZE_ENUM = [\r\n    {text: '1920x1080', value: 14},\r\n    {text: '1280x720', value: 11},\r\n    {text: '640x480', value: 8}\r\n]\r\n\r\nfunction SmbTimerCamCfg({}) {\r\n    const [ssid, setSSID] = useState(localStorage.getItem('ssid') || '');\r\n    const [pwd, setPwd] = useState(localStorage.getItem('password') || '');\r\n    const [host, setHost] = useState('');\r\n    const [user, setUser] = useState('');\r\n    const [smbPwd, setSmbPwd] = useState('');\r\n    const [path, setPath] = useState('');\r\n    const [prefix, setPrefix] = useState('img');\r\n    const [imageSize, setImageSize] = useState(14);\r\n    const [interval, setInterval] = useState(5);\r\n    const [pwdVisible, setPwdVisible] = useState(false);\r\n    const [smbPwdVisible, setSmbPwdVisible] = useState(false);\r\n    const togglePwdVisible = () => setPwdVisible(!pwdVisible);\r\n    const toggleSmbPwdVisible = () => setSmbPwdVisible(!smbPwdVisible);\r\n    const saveSSID = ev => {\r\n        setSSID(ev.target.value);\r\n        localStorage.setItem('ssid', ev.target.value);\r\n    }\r\n    const savePwd = ev => {\r\n        setPwd(ev.target.value);\r\n        localStorage.setItem('password', ev.target.value);\r\n    }\r\n    const ImageSizeList = (() => {\r\n        return IMAGE_SIZE_ENUM.map((item, index) => <option key={index} value={item.value}>{item.text}</option>);\r\n    })();\r\n\r\n    return (<>\r\n        <table className=\"wrapper-timercambox\">\r\n            <tbody>\r\n                <tr className=\"wifibox-item\">\r\n                    <td className=\"field-name\">WIFI SSID:</td>\r\n                    <td>\r\n                        <input id=\"smbtimercam__config__ssid\" type=\"text\" value={ssid} onChange={saveSSID} />\r\n                    </td>\r\n                </tr>\r\n                <tr className=\"wifibox-item password\">\r\n                    <td className=\"field-name\">WIFI Password:</td>\r\n                    <td>\r\n                        <input id=\"smbtimercam__config__password\" type={!pwdVisible?\"password\":\"text\"} value={pwd} onChange={savePwd} />\r\n                        <img\r\n                            className=\"btn-eye\"\r\n                            src={!pwdVisible ? \"./assets/images/show.png\" : \"./assets/images/hide.png\"}\r\n                            onClick={togglePwdVisible}\r\n                            alt=\"\"\r\n                        />\r\n                    </td>\r\n                </tr>\r\n                <tr className=\"wifibox-item\">\r\n                    <td className=\"field-name\">Host/IP:</td>\r\n                    <td>\r\n                        <input id=\"smbtimercam__config__host\" placeholder=\"eg: xxxxxxx.com or 0.0.0.0\" type=\"text\" value={host} onChange={ev => setHost(ev.target.value)} />\r\n                    </td>\r\n                </tr>\r\n                <tr className=\"wifibox-item\">\r\n                    <td className=\"field-name\">Username:</td>\r\n                    <td>\r\n                        <input id=\"smbtimercam__config__user\" type=\"text\" value={user} onChange={ev => setUser(ev.target.value)} />\r\n                    </td>\r\n                </tr>\r\n                <tr className=\"wifibox-item password\">\r\n                    <td className=\"field-name\">Password:</td>\r\n                    <td>\r\n                        <input id=\"smbtimercam__config__smbpassword\" type={!smbPwdVisible?\"password\":\"text\"} value={smbPwd} onChange={ev => setSmbPwd(ev.target.value)} />\r\n                        <img\r\n                            className=\"btn-eye\"\r\n                            src={!pwdVisible ? \"./assets/images/show.png\" : \"./assets/images/hide.png\"}\r\n                            onClick={toggleSmbPwdVisible}\r\n                            alt=\"\"\r\n                        />\r\n                    </td>\r\n                </tr>\r\n                <tr className=\"wifibox-item\">\r\n                    <td className=\"field-name\">FolderPath:</td>\r\n                    <td>\r\n                        <input id=\"smbtimercam__config__path\" type=\"text\" placeholder=\"eg: examples/demo\" value={path} onChange={ev => setPath(ev.target.value)} />\r\n                    </td>\r\n                </tr>\r\n                <tr className=\"wifibox-item\">\r\n                    <td className=\"field-name\">FilePrefix:</td>\r\n                    <td>\r\n                        <input id=\"smbtimercam__config__prefix\" type=\"text\" value={prefix} onChange={ev => setPrefix(ev.target.value)} />\r\n                    </td>\r\n                </tr>\r\n                <tr className=\"wifibox-item\">\r\n                    <td className=\"field-name\">Image Size:</td>\r\n                    <td>\r\n                        <select id=\"smbtimercam__config__imagesize\" value={imageSize} onChange={ev => setImageSize(ev.target.value)}>\r\n                            {ImageSizeList}\r\n                        </select>\r\n                    </td>\r\n                </tr>\r\n                <tr className=\"wifibox-item\">\r\n                    <td className=\"field-name\">Interval:</td>\r\n                    <td>\r\n                        <input id=\"smbtimercam__config__interval\" type=\"number\" value={interval} onChange={ev => setInterval(ev.target.value)} />\r\n                        <span>(senconds)</span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </>)\r\n}\r\n\r\nexport default SmbTimerCamCfg;","import SmbTimerCamCfg from './SmbTimerCamCfg';\r\n\r\nexport default SmbTimerCamCfg;","import React, { useState } from 'react';\r\n\r\nimport './AwsOssTimerCamCfg.scss';\r\n\r\nconst IMAGE_SIZE_ENUM = [\r\n    {text: '1920x1080', value: 14},\r\n    {text: '1280x720', value: 11},\r\n    {text: '640x480', value: 8}\r\n]\r\n\r\nconst AwsOssTimerCamCfg = ({}) => {\r\n    const [ssid, setSSID] = useState(localStorage.getItem('ssid') || '');\r\n    const [pwd, setPwd] = useState(localStorage.getItem('password') || '');\r\n    const [accessKey, setAccessKey] = useState('');\r\n    const [accessKeySecret, setAccessKeySecret] = useState('');\r\n    const [url, setUrl] = useState('');\r\n    const [prefix, setPrefix] = useState('pic');\r\n    const [imageSize, setImageSize] = useState(14);\r\n    const [interval, setInterval] = useState(20);\r\n    const [pwdVisible, setPwdVisible] = useState(false);\r\n\r\n    const togglePwdVisible = () => setPwdVisible(!pwdVisible);\r\n    const saveSSID = ev => {\r\n        setSSID(ev.target.value);\r\n        localStorage.setItem('ssid', ev.target.value);\r\n    }\r\n    const savePwd = ev => {\r\n        setPwd(ev.target.value);\r\n        localStorage.setItem('password', ev.target.value);\r\n    }\r\n    const ImageSizeList = (() => {\r\n        return IMAGE_SIZE_ENUM.map((item, index) => <option key={index} value={item.value}>{item.text}</option>);\r\n    })();\r\n\r\n    return (<>\r\n        <table className=\"wrapper-timercambox\">\r\n            <tbody>\r\n                <tr className=\"wifibox-item\">\r\n                    <td className=\"field-name\">WIFI SSID:</td>\r\n                    <td>\r\n                        <input id=\"awsosstimercam__config__ssid\" type=\"text\" value={ssid} onChange={saveSSID} />\r\n                    </td>\r\n                </tr>\r\n                <tr className=\"wifibox-item password\">\r\n                    <td className=\"field-name\">WIFI Password:</td>\r\n                    <td>\r\n                        <input id=\"awsosstimercam__config__password\" type={!pwdVisible?\"password\":\"text\"} value={pwd} onChange={savePwd} />\r\n                        <img\r\n                            className=\"btn-eye\"\r\n                            src={!pwdVisible ? \"./assets/images/show.png\" : \"./assets/images/hide.png\"}\r\n                            onClick={togglePwdVisible}\r\n                            alt=\"\"\r\n                        />\r\n                    </td>\r\n                </tr>\r\n                <tr className=\"wifibox-item\">\r\n                    <td className=\"field-name\">Access Key:</td>\r\n                    <td>\r\n                        <input\r\n                            id=\"awsosstimercam__config__access_key\"\r\n                            type=\"text\"\r\n                            value={accessKey}\r\n                            onChange={ev => setAccessKey(ev.target.value)}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n                \r\n                <tr className=\"wifibox-item\">\r\n                    <td className=\"field-name\">Secret Key:</td>\r\n                    <td>\r\n                        <input\r\n                            id=\"awsosstimercam__config__access_key_secret\"\r\n                            type=\"text\"\r\n                            value={accessKeySecret}\r\n                            onChange={ev => setAccessKeySecret(ev.target.value)}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr className=\"wifibox-item\">\r\n                    <td className=\"field-name\">URL:</td>\r\n                    <td>\r\n                        <input\r\n                            id=\"awsosstimercam__config__url\"\r\n                            type=\"text\"\r\n                            value={url}\r\n                            onChange={ev => setUrl(ev.target.value)}\r\n                            placeholder=\"eg: example.s3.amazonaws.com/example\"\r\n                        />\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr className=\"wifibox-item\">\r\n                    <td className=\"field-name\">FilePrefix:</td>\r\n                    <td>\r\n                        <input id=\"awsosstimercam__config__prefix\" type=\"text\" value={prefix} onChange={ev => setPrefix(ev.target.value)} />\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr className=\"wifibox-item\">\r\n                    <td className=\"field-name\">Image Size:</td>\r\n                    <td>\r\n                        <select id=\"awsosstimercam__config__imagesize\" value={imageSize} onChange={ev => setImageSize(ev.target.value)}>\r\n                            {ImageSizeList}\r\n                        </select>\r\n                    </td>\r\n                </tr>\r\n                <tr className=\"wifibox-item\">\r\n                    <td className=\"field-name\">Interval:</td>\r\n                    <td>\r\n                        <input id=\"awsosstimercam__config__interval\" type=\"number\" value={interval} onChange={ev => setInterval(ev.target.value)} />\r\n                        <span>(senconds)</span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </>)\r\n}\r\n\r\nexport default AwsOssTimerCamCfg;\r\n","import AwsOssTimerCamCfg from './AwsOssTimerCamCfg';\r\n\r\nexport default AwsOssTimerCamCfg;","import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport cs from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport { CommandTypes, sendCommandWithCustom, sendCommandOnce } from '../../ipc/events';\r\nimport { openModal, setAnimation } from '../../actions/modal.action';\r\nimport { startStdout, appendStdout } from '../../actions/stdout.action';\r\nimport SerialLog from '../SerialLog';\r\nimport ConfigForm from '../ConfigForm';\r\nimport Loading from '../Loading';\r\nimport WifiInput from '../WifiInput';\r\nimport { AnimationState, DownloadStatus } from '../../constants';\r\nimport DataDemoTextBox from '../DataDemoTextBox/DataDemoTextBox';\r\nimport TimerCamCfg from '../TimerCamCfg/TimerCamCfg';\r\nimport ImageWallPaperCfg from '../ImageWallPaperCfg/ImageWallPaperCfg';\r\nimport PaperWeatherStationCfg from '../PaperWeatherStationCfg/PaperWeatherStationCfg';\r\nimport { QRCode } from '../QRCode';\r\nimport SmbTimerCamCfg from '../SmbTimerCamCfg';\r\nimport AwsOssTimerCamCfg from '../AwsOssTimerCamCfg';\r\n\r\nimport './FirmwareItem.scss';\r\n\r\nconst electron = window.require('electron');\r\nconst { ipcRenderer, shell } = electron;\r\n\r\nlet tmpProps = null;\r\n\r\nconst handleGotoApplyApi = url => {\r\n    shell.openExternal(url);\r\n}\r\n\r\nconst beforeBurn = props => {\r\n    if(props.firmware.name.indexOf('UIFlow') > -1 || props.firmware.name === 'EchoSTT') {\r\n        let container = document.createElement('div');\r\n        ReactDOM.render(<WifiInput />, container);\r\n        window.swal({\r\n            className: 'wifi-modal',\r\n            icon: 'info',\r\n            content: container,\r\n            closeOnClickOutside: false,\r\n            closeOnEsc: false,\r\n            title: 'Wifi Setting',\r\n            buttons: {\r\n                confirm: {\r\n                    text: 'Cancel',\r\n                    value: false\r\n                },\r\n                cancel: {\r\n                    text: 'Start',\r\n                    value: true,\r\n                    visible: true\r\n                }\r\n            }\r\n        })\r\n        .then(val => {\r\n            if(val) {\r\n                burnHandler(props);\r\n            }\r\n        });\r\n    }\r\n    else if (props.firmware.name === 'TimerCam') {\r\n        let tiemrcamCfgWrapper = document.createElement('div');\r\n        ReactDOM.render(<TimerCamCfg gotoRefer={handleGotoApplyApi} firmware={props.firmware.name} />, tiemrcamCfgWrapper);\r\n        window.swal({\r\n            className: 'timercfg-modal',\r\n            content: tiemrcamCfgWrapper,\r\n            closeOnClickOutside: false,\r\n            closeOnEsc: false,\r\n            title: 'TimerCam Configuration',\r\n            buttons: {\r\n                confirm: {\r\n                    text: 'Cancel',\r\n                    value: 'cancel'\r\n                },\r\n                cancel: {\r\n                    text: 'Burn',\r\n                    value: 'burn',\r\n                    visible: true\r\n                }\r\n            }\r\n        })\r\n        .then(val => {\r\n            if(val === 'burn') {\r\n                let ssid = document.getElementById('timercam__config__ssid').value;\r\n                let password = document.getElementById('timercam__config__password').value;\r\n                let wakeTime = document.getElementById('timercam__config__waketime').value;\r\n                let imageSize = document.getElementById('timercam__config__imagesize').value;\r\n                let payload = { ssid, password, wakeTime, imageSize };\r\n                burnHandler({...props, other: {...payload}});\r\n            }\r\n        });\r\n    }\r\n    else if(props.firmware.name === 'TimerCamAliyun') {\r\n        let tiemrcamCfgWrapper = document.createElement('div');\r\n        ReactDOM.render(<TimerCamCfg gotoRefer={handleGotoApplyApi} firmware={props.firmware.name} />, tiemrcamCfgWrapper);\r\n        window.swal({\r\n            className: 'timercfg-modal',\r\n            content: tiemrcamCfgWrapper,\r\n            closeOnClickOutside: false,\r\n            closeOnEsc: false,\r\n            title: 'TimerCam Configuration',\r\n            buttons: {\r\n                confirm: {\r\n                    text: 'Cancel',\r\n                    value: 'cancel'\r\n                },\r\n                cancel: {\r\n                    text: 'Burn',\r\n                    value: 'burn',\r\n                    visible: true\r\n                }\r\n            }\r\n        })\r\n        .then(val => {\r\n            if(val === 'burn') {\r\n                let ssid = document.getElementById('timercam__config__ssid').value;\r\n                let password = document.getElementById('timercam__config__password').value;\r\n                let wakeTime = document.getElementById('timercam__config__waketime').value;\r\n                let imageSize = document.getElementById('timercam__config__imagesize').value;\r\n                let accessKey = document.getElementById('timercam__config__access_key').value;\r\n                let accessKeySecret = document.getElementById('timercam__config__access_key_secret').value;\r\n                let serverAddr = document.getElementById('timercam__config__server_address').value;\r\n                let bucket = document.getElementById('timercam__config__bucket').value;\r\n                let payload = { ssid, password, wakeTime, imageSize, accessKey, accessKeySecret, serverAddr, bucket };\r\n                burnHandler({...props, other: {...payload}});\r\n            }\r\n        });\r\n    }\r\n    else if(props.firmware.name === 'TimerFolderPusher') {\r\n        let tiemrcamCfgWrapper = document.createElement('div');\r\n        ReactDOM.render(<SmbTimerCamCfg gotoRefer={handleGotoApplyApi} firmware={props.firmware.name} />, tiemrcamCfgWrapper);\r\n        window.swal({\r\n            className: 'timercfg-modal',\r\n            content: tiemrcamCfgWrapper,\r\n            closeOnClickOutside: false,\r\n            closeOnEsc: false,\r\n            title: 'Configuration',\r\n            buttons: {\r\n                confirm: {\r\n                    text: 'Cancel',\r\n                    value: 'cancel'\r\n                },\r\n                cancel: {\r\n                    text: 'Burn',\r\n                    value: 'burn',\r\n                    visible: true\r\n                }\r\n            }\r\n        })\r\n        .then(val => {\r\n            if(val === 'burn') {\r\n                let ssid = document.getElementById('smbtimercam__config__ssid').value;\r\n                let password = document.getElementById('smbtimercam__config__password').value;\r\n                let host = document.getElementById('smbtimercam__config__host').value;\r\n                let user = document.getElementById('smbtimercam__config__user').value;\r\n                let smbpassword = document.getElementById('smbtimercam__config__smbpassword').value;\r\n                let path = document.getElementById('smbtimercam__config__path').value;\r\n                let prefix = document.getElementById('smbtimercam__config__prefix').value;\r\n                let imageSize = document.getElementById('smbtimercam__config__imagesize').value;\r\n                let interval = document.getElementById('smbtimercam__config__interval').value;\r\n                let payload = { ssid, password, host, user, smbpassword, path, prefix, imageSize, interval };\r\n                burnHandler({...props, other: {...payload}});\r\n            }\r\n        });\r\n    }\r\n    else if(props.firmware.name === 'TimerS3FolderPusher') {\r\n        let tiemrcamCfgWrapper = document.createElement('div');\r\n        ReactDOM.render(<AwsOssTimerCamCfg />, tiemrcamCfgWrapper);\r\n        window.swal({\r\n            className: 'timercfg-modal',\r\n            content: tiemrcamCfgWrapper,\r\n            closeOnClickOutside: false,\r\n            closeOnEsc: false,\r\n            title: 'Configuration',\r\n            buttons: {\r\n                confirm: {\r\n                    text: 'Cancel',\r\n                    value: 'cancel'\r\n                },\r\n                cancel: {\r\n                    text: 'Burn',\r\n                    value: 'burn',\r\n                    visible: true\r\n                }\r\n            }\r\n        })\r\n        .then(val => {\r\n            if(val === 'burn') {\r\n                let ssid = document.getElementById('awsosstimercam__config__ssid').value;\r\n                let password = document.getElementById('awsosstimercam__config__password').value;\r\n                let url = document.getElementById('awsosstimercam__config__url').value.replace('https://', '').replace('http://', '');\r\n                let host = url.substring(0, url.indexOf('/'));\r\n                let path = url.substring(url.indexOf('/'));\r\n                let accessKey = document.getElementById('awsosstimercam__config__access_key').value;\r\n                let accessKeySecret = document.getElementById('awsosstimercam__config__access_key_secret').value;\r\n                let prefix = document.getElementById('awsosstimercam__config__prefix').value;\r\n                let imageSize = document.getElementById('awsosstimercam__config__imagesize').value;\r\n                let interval = document.getElementById('awsosstimercam__config__interval').value;\r\n                let payload = { ssid, password, accessKey, accessKeySecret, host, path, prefix, imageSize, interval };\r\n                burnHandler({...props, other: {...payload}});\r\n            }\r\n        });\r\n    }\r\n    else if(props.type === 'paper' && props.firmware.name === 'OnlineImage') {\r\n        let imagewpCfgWrapper = document.createElement('div');\r\n        ReactDOM.render(<ImageWallPaperCfg />, imagewpCfgWrapper);\r\n        window.swal({\r\n            className: 'timercfg-modal',\r\n            content: imagewpCfgWrapper,\r\n            closeOnClickOutside: false,\r\n            closeOnEsc: false,\r\n            title: 'OnlineImage Configuration',\r\n            buttons: {\r\n                confirm: {\r\n                    text: 'Cancel',\r\n                    value: 'cancel'\r\n                },\r\n                cancel: {\r\n                    text: 'Burn',\r\n                    value: 'burn',\r\n                    visible: true\r\n                }\r\n            }\r\n        })\r\n        .then(val => {\r\n            if(val === 'burn') {\r\n                let ssid = document.getElementById('imagewp__config__ssid').value;\r\n                let password = document.getElementById('imagewp__config__password').value;\r\n                let wakeTime = document.getElementById('imagewp__config__waketime').value;\r\n                let url = document.getElementById('imagewp__config__url').value;\r\n                if(url.trim() === '') {\r\n                    window.swal({\r\n                        text: 'Image url is required.',\r\n                        icon: 'warning'\r\n                    });\r\n                    return;\r\n                }\r\n                let payload = { ssid, password, wakeTime, url };\r\n                burnHandler({...props, other: {...payload}});\r\n            }\r\n        });\r\n    }\r\n    else if(props.type === 'paper' && props.firmware.name === 'WeatherStation') {\r\n        let paperwsCfgWrapper = document.createElement('div');\r\n        ReactDOM.render(<PaperWeatherStationCfg gotoApplyApi={handleGotoApplyApi} />, paperwsCfgWrapper);\r\n        window.swal({\r\n            className: 'timercfg-modal',\r\n            content: paperwsCfgWrapper,\r\n            closeOnClickOutside: false,\r\n            closeOnEsc: false,\r\n            title: 'Weather Station Configuration',\r\n            buttons: {\r\n                confirm: {\r\n                    text: 'Cancel',\r\n                    value: 'cancel'\r\n                },\r\n                cancel: {\r\n                    text: 'Burn',\r\n                    value: 'burn',\r\n                    visible: true\r\n                }\r\n            }\r\n        })\r\n        .then(val => {\r\n            if(val === 'burn') {\r\n                let ssid = document.getElementById('paperws__config__ssid').value;\r\n                let password = document.getElementById('paperws__config__password').value;\r\n                let latitude = document.getElementById('paperws__config__latitude').value;\r\n                let longitude = document.getElementById('paperws__config__longitude').value;\r\n                let language = document.getElementById('paperws__config__language').value;\r\n                let apikey = document.getElementById('paperws__config__apikey').value;\r\n                if(typeof parseFloat(latitude) !== 'number') {\r\n                    window.swal({\r\n                        text: 'Invalid latitude.',\r\n                        icon: 'warning'\r\n                    });\r\n                    return;\r\n                }\r\n                if(typeof parseFloat(longitude) !== 'number') {\r\n                    window.swal({\r\n                        text: 'Invalid longitude.',\r\n                        icon: 'warning'\r\n                    });\r\n                    return;\r\n                }\r\n                if(apikey === '' || apikey === undefined) {\r\n                    window.swal({\r\n                        text: 'Invalid Apikey.',\r\n                        icon: 'warning'\r\n                    });\r\n                    return;\r\n                }\r\n                if(password === '') {\r\n                    password = 'null';\r\n                }\r\n                let payload = { ssid, password, latitude, longitude, apikey, language };\r\n                burnHandler({...props, other: {...payload}});\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        burnHandler(props);\r\n    }\r\n}\r\n\r\nconst burnHandler = (props) => {\r\n    let closeModalHandler = props.closeModal;\r\n    let payload = {\r\n        com: props.com,\r\n        name: props.firmware.name,\r\n        version: props.version,\r\n        type: props.type,\r\n        other: props.other || null\r\n    }\r\n\r\n    let ssid = localStorage.getItem('ssid');\r\n    let password = localStorage.getItem('password');\r\n    if (ssid != undefined && password != undefined && ssid != '' && password != '') {\r\n        payload.ssid = ssid;\r\n        payload.password = password;\r\n    }\r\n\r\n    const footerButtons = (function () {\r\n        return (\r\n            <>\r\n                <div className=\"footer-btn\">\r\n                    <button onClick={() => {\r\n                        ipcRenderer.send(CommandTypes.killTask, null);\r\n                        let sub = `${CommandTypes.burn}Callback-${payload.com}`;\r\n                        if (ipcRenderer.eventNames().includes(sub)) {\r\n                            ipcRenderer.off(sub, ipcRenderer.listeners(sub)[0]);\r\n                        }\r\n                        closeModalHandler();\r\n                    }}>Close</button>\r\n                </div>\r\n            </>\r\n        )\r\n    })();\r\n\r\n    props.openModal(<SerialLog footer={footerButtons} com={payload.com} />);\r\n\r\n    props.startStdoutMessage(`=================\\nStart Burn\\n=================\\n`);\r\n    sendCommandWithCustom(payload.com, CommandTypes.burn, payload, data => {\r\n        props.appendStdoutMessage(data);\r\n    });\r\n    ipcRenderer.once('notify-bind', (ev, data) => {\r\n        if(data === false) {\r\n            // 设备未被绑定\r\n            window.swal({\r\n                className: 'binding-tip-modal',\r\n                title: '',\r\n                text: 'It is detected that this device is still unbound, whether to bind to the account now?',\r\n                icon: 'warning',\r\n                buttons: {\r\n                    confirm: {\r\n                        text: 'Yes',\r\n                        value: true\r\n                    },\r\n                    cancel: {\r\n                        text: 'No',\r\n                        value: false,\r\n                        visible: true\r\n                    }\r\n                }\r\n            })\r\n            .then(ret => {\r\n                if(ret) {\r\n                    window.swal({\r\n                        title: '',\r\n                        text: 'Adding device, wait a minute...',\r\n                        icon: 'warning',\r\n                        closeOnClickOutside: false,\r\n                        closeOnEsc: false,\r\n                        buttons: false\r\n                    })\r\n            \r\n                    sendCommandOnce(CommandTypes.bindDevice, {\r\n                        com: props.com,\r\n                        firmware: props.firmware.name,\r\n                        firmwareVersion: props.version,\r\n                        type: props.type\r\n                    }, ret => {\r\n                        if(ret === -1) {\r\n                            // 身份验证过期\r\n                            this.props.setLoginState(false);\r\n                            window.swal({\r\n                                title: '',\r\n                                text: 'The login status has expired, please log in again',\r\n                                icon: 'warning'\r\n                            })\r\n                            return;\r\n                        }\r\n                        else if(ret === false) {\r\n                            window.swal({\r\n                                title: '',\r\n                                text: 'Invalid device',\r\n                                icon: 'error'\r\n                            })\r\n                        }\r\n                        else if(ret === true) {\r\n                            window.swal({\r\n                                title: '',\r\n                                text: 'Device has been added in your account.',\r\n                                icon: 'success'\r\n                            })\r\n                        }\r\n                        else if(ret === -1000) {\r\n                            window.swal({\r\n                                title: '',\r\n                                text: 'Network occured errors',\r\n                                icon: 'error'\r\n                            })\r\n                        }\r\n                        else if(ret === 400) {\r\n                            window.swal({\r\n                                className: 'binding-tip-modal',\r\n                                title: '',\r\n                                text: 'This device has been bound, try again after unbinding.',\r\n                                icon: 'error'\r\n                            })\r\n                        }\r\n                        else {\r\n                            window.swal({\r\n                                title: '',\r\n                                text: 'Network occured errors',\r\n                                icon: 'error'\r\n                            })\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nconst getTokenHandler = (props) => {\r\n    tmpProps = props;\r\n\r\n    let payload = {\r\n        com: props.com\r\n    }\r\n\r\n    window.swal({\r\n        title: 'Tips',\r\n        text: 'Getting token ...',\r\n        icon: 'warning',\r\n        buttons: false\r\n    });\r\n\r\n    let modalOpts = {};\r\n    sendCommandWithCustom(payload.com, CommandTypes.getSttToken, payload, data => {\r\n        if (data.state === 1) {\r\n            if(tmpProps.device === 'timercam') {\r\n                let wrapper = document.createElement('div');\r\n                ReactDOM.render(<QRCode token={data.message} />, wrapper);\r\n                modalOpts = {\r\n                    content: wrapper,\r\n                    buttons: {\r\n                        confirm: {\r\n                            text: 'Copy Token',\r\n                            value: true,\r\n                            closeModal: false,\r\n                            className: '__token_copy'\r\n                        },\r\n                        view: {\r\n                            text: 'View in browser',\r\n                            value: 'view',\r\n                            closeModal: false,\r\n                            visible: true\r\n                        },\r\n                        cancel: {\r\n                            text: 'Ok',\r\n                            value: false,\r\n                            visible: true\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                modalOpts = {\r\n                    title: 'Success',\r\n                    text: `Token: ${data.message}`,\r\n                    icon: 'success',\r\n                    buttons: {\r\n                        confirm: {\r\n                            text: 'Copy',\r\n                            value: true,\r\n                            closeModal: false,\r\n                            className: '__token_copy'\r\n                        },\r\n                        cancel: {\r\n                            text: 'Ok',\r\n                            value: false,\r\n                            visible: true\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            window.swal(modalOpts)\r\n            .then(value => {\r\n                if(value === 'view') {\r\n                    shell.openExternal(`http://api.m5stack.com:5003/timer-cam/image?tok=${data.message}`);\r\n                    window.swal.stopLoading();\r\n                    return;\r\n                }\r\n                if(value) {\r\n                    new window['ClipboardJS']('.__token_copy', {\r\n                        text: function() {\r\n                            return data.message;\r\n                        }\r\n                    });\r\n                    window.swal.stopLoading();\r\n                    let copyBtn = document.getElementsByClassName('__token_copy')[0];\r\n                    copyBtn.innerText = 'Copied';\r\n                }\r\n            });\r\n        } else {\r\n            window.swal({\r\n                title: 'Error',\r\n                text: `Get token failed. ${data.message}.`,\r\n                icon: 'error',\r\n                buttons: {\r\n                    confirm: {\r\n                        text: 'Cancel'\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nconst downloadButton = (props) => {\r\n    let { selectedVersion } = props;\r\n    if (!selectedVersion.downloadStatus) {\r\n        return (\r\n            <>\r\n                <i className=\"iconfont icon-clouddownload\"></i>\r\n                <span>Download</span>\r\n            </>\r\n        );\r\n    }\r\n    switch (selectedVersion.downloadStatus) {\r\n        case DownloadStatus.DOWNLOADING:\r\n            let styles = {\r\n                width: (115 * selectedVersion.progress) + 'px'\r\n            }\r\n            return (\r\n                <>\r\n                    <div className=\"progress\" style={styles}></div>\r\n                    <span>Downloading</span>\r\n                </>\r\n            );\r\n        case DownloadStatus.ERROR:\r\n            return (\r\n                <>\r\n                    <i className=\"iconfont icon-clouddownload\"></i>\r\n                    <span>Retry</span>\r\n                </>\r\n            );\r\n        default:\r\n            return (\r\n                <>\r\n                    <i className=\"iconfont icon-clouddownload\"></i>\r\n                    <span>Download</span>\r\n                </>\r\n            );\r\n    }\r\n}\r\n\r\nconst configurateHandle = (props) => {\r\n    let closeModalHandler = props.closeModal;\r\n    let payload = {\r\n        com: props.com,\r\n        name: props.firmware.name,\r\n        version: props.version,\r\n        type: props.type\r\n    }\r\n\r\n    props.openModal(<Loading />);\r\n\r\n    sendCommandWithCustom(props.com, CommandTypes.getUIFlowSetting, payload, data => {\r\n        props.closeModal();\r\n\r\n        // check enable read data in this com\r\n        if (data === 'Error') {\r\n            window.swal({\r\n                title: 'Tips',\r\n                text: 'Get UIFlow settings failed, check your COM and retry.',\r\n                icon: 'error',\r\n                buttons: {\r\n                    confirm: {\r\n                        text: 'Cancel'\r\n                    }\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        let json = {};\r\n        // check data validate\r\n        try {\r\n            json = JSON.parse(data);\r\n        } catch {\r\n            window.swal({\r\n                title: 'Tips',\r\n                text: 'Invalid data received, check your device.',\r\n                icon: 'error',\r\n                buttons: {\r\n                    confirm: {\r\n                        text: 'Cancel'\r\n                    }\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        // Successfully. Must to open after loading modal.\r\n        setTimeout(() => {\r\n            props.openModal(<ConfigForm\r\n                deviceType={props.type}\r\n                data={json}\r\n                onClose={() => {\r\n                    let sub = `${CommandTypes.getUIFlowSetting}Callback-${payload.com}`;\r\n                    if (ipcRenderer.eventNames().includes(sub)) {\r\n                        ipcRenderer.off(sub, ipcRenderer.listeners(sub)[0]);\r\n                    }\r\n                    closeModalHandler();\r\n                }}\r\n                onSave={option => {\r\n                    beforeSave(props, payload, option)\r\n                }}\r\n            />);\r\n        }, 300);\r\n    });\r\n}\r\n\r\nfunction beforeSave(props, payload, option) {\r\n    if(option.APN === undefined) {\r\n        option.APN = '';\r\n    }\r\n    if(option.APN === '') {\r\n        window.swal({\r\n            title: 'Tips',\r\n            text: 'APN is required, if you continue, \"CMNET\" will be used by default.',\r\n            icon: 'warning',\r\n            buttons: {\r\n                confirm: {\r\n                    text: 'Continue',\r\n                    value: 1\r\n                },\r\n                cancel: {\r\n                    text: 'Back',\r\n                    value: 0,\r\n                    visible: true\r\n                }\r\n            }\r\n        })\r\n        .then(val => {\r\n            if(val === 1) {\r\n                option.APN = 'CMNET';\r\n                saveSettingHandle(props, payload, option);\r\n            }\r\n        })\r\n    } else {\r\n        saveSettingHandle(props, payload, option);\r\n    }\r\n}\r\n\r\nfunction saveSettingHandle(props, payload, option) {\r\n    props.closeModal();\r\n    window.swal({\r\n        title: 'Tips',\r\n        text: 'Writing data, do not close.',\r\n        icon: 'warning',\r\n        buttons: false\r\n    });\r\n    sendCommandWithCustom(props.com, CommandTypes.setUIFlowSetting, { ...payload, option: { ...option } }, data => {\r\n        let sub = `${CommandTypes.setUIFlowSetting}Callback-${payload.com}`;\r\n        if (ipcRenderer.eventNames().includes(sub)) {\r\n            ipcRenderer.off(sub, ipcRenderer.listeners(sub)[0]);\r\n        }\r\n        if (data === 'Ok') {\r\n            window.swal({\r\n                title: 'Success',\r\n                text: 'Update successfully.',\r\n                icon: 'success'\r\n            });\r\n        } else {\r\n            window.swal({\r\n                title: 'Failed',\r\n                text: 'Update falied.',\r\n                icon: 'error'\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nfunction FirmwareItem(props) {\r\n    let { firmware, downloadHanlder, removeHandler, device } = props;\r\n    firmware.versions.sort((a, b) => Date.parse(new Date(b.publishAt)) - Date.parse(new Date(a.publishAt)));\r\n    let [selectedVersion, setSelectedVersion] = useState({});\r\n    let selectRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let index = 0;\r\n        if (selectRef != null) {\r\n            index = firmware['versions'].findIndex(v => v.version === selectRef.current.value)\r\n        }\r\n        setSelectedVersion(firmware['versions'][index]);\r\n    }, [firmware, selectedVersion]);\r\n\r\n    const versionSelector = firmware.versions\r\n        .map(v => {\r\n            return (<option key={v.version}>{v.version}</option>)\r\n        });\r\n\r\n    const selectVersion = ev => {\r\n        setSelectedVersion(props.firmware.versions.find(v => v.version === ev.target.value));\r\n    }\r\n\r\n    const btnGetToken = () => {\r\n        if (firmware.name.toUpperCase() === 'ECHOSTT' || firmware.name.toUpperCase() === 'TIMERCAM') {\r\n            return (\r\n                <button\r\n                    className=\"btn remove\"\r\n                    onClick={() => {\r\n                        getTokenHandler(props);\r\n                    }}\r\n                >\r\n                    <div className=\"mask\"></div>\r\n                    <span>Get Token</span>\r\n                </button>\r\n            )\r\n        } else if (firmware.name.indexOf('UIFlow') > -1 ) {\r\n            return (\r\n                <button\r\n                    className=\"btn remove\"\r\n                    onClick={() => {\r\n                        configurateHandle({\r\n                            ...props,\r\n                            version: selectedVersion.version,\r\n                            type: device\r\n                        });\r\n                    }}\r\n                >\r\n                    <div className=\"mask\"></div>\r\n                    <i className=\"iconfont icon-setting\"></i>\r\n                    <span>Configuration</span>\r\n                </button>\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n\r\n    const btnShowDataDemo = () => {\r\n        return (\r\n            <button\r\n                className={cs('btn', 'info')}\r\n                onClick={() => {\r\n                    let container = document.createElement('div');\r\n                    ReactDOM.render(<DataDemoTextBox value={firmware.dataDemo} />, container);\r\n\r\n                    window.swal({\r\n                        content: container,\r\n                        className: 'data-demo-modal'\r\n                    })\r\n                    .then(val => {\r\n\r\n                    });\r\n                }}\r\n            >\r\n                <div className=\"mask\"></div>\r\n                <span>Data Demo</span>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    let downloadCounter = parseInt(firmware.downloaded);\r\n    let downloadText = '';\r\n    if(!isNaN(downloadCounter)) {\r\n        if(downloadCounter >= 10000) {\r\n            downloadText = (downloadCounter / 1000).toFixed(1) + 'k';\r\n        } else {\r\n            downloadText = downloadCounter.toString();\r\n        }\r\n    }\r\n\r\n    let imgErrorHandler = (ev, url) => {\r\n        ev.persist();\r\n        ev.target.src = './assets/cover/default.png';\r\n        let timer = setTimeout(() => {\r\n            ev.target.src = url;\r\n            clearTimeout(timer);\r\n        }, 5000);\r\n    }\r\n\r\n    let openLinkHandler = (ev, url) => {\r\n        ev.preventDefault();\r\n        shell.openExternal(url);\r\n    }\r\n\r\n    return (\r\n        <div className={cs('wrapper-item-firmware', 'fake-out')}>\r\n            <article className=\"item\">\r\n                <img className=\"cover\"\r\n                    src={firmware.cover ? `./assets/cover/${firmware.cover}` : './assets/cover/default.png'}\r\n                    onError={ev => imgErrorHandler(ev, `./assets/cover/${firmware.cover}`)}\r\n                    draggable=\"false\"\r\n                    onMouseOver={ev => {\r\n                        if(ev.target.__firstInited && !ev.target.__played) {\r\n                            ev.target.__played = true;\r\n                            ev.target.play();\r\n                        }\r\n                    }}\r\n                    onMouseLeave={ev => {\r\n                        if(ev.target.__firstInited && ev.target.__played) {\r\n                            ev.target.__played = false;\r\n                            ev.target.stop();\r\n                        }\r\n                    }}\r\n                    onLoad={ev => {\r\n                        if(ev.target.__firstInited) return;\r\n                        if(ev.target.src.endsWith('.gif')) {\r\n                            ev.target.__firstInited = true;\r\n                            ev.target.__played = false;\r\n                            ev.target.stop();\r\n                        }\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <span className=\"name\">{firmware.name}</span>\r\n                    {\r\n                        firmware.publisher === 'M5Stack' ?\r\n                            <span className=\"tag\">official</span> : null\r\n                    }\r\n                    <select className=\"selector-version\" onChange={selectVersion} ref={selectRef}>\r\n                        {versionSelector}\r\n                    </select>\r\n                    {\r\n                        firmware.repoLink ?\r\n                        (\r\n                            <a className=\"link\" href={firmware.repoLink} onClick={ev => openLinkHandler(ev, firmware.repoLink)}>\r\n                                <i className=\"iconfont icon-github github\"></i>\r\n                            </a>\r\n                        )\r\n                        : null\r\n                    }\r\n                </h2>\r\n                <p>{firmware.description}</p>\r\n                <div className=\"footer\">\r\n                    {/* <span className=\"more\">More</span> */}\r\n                    {\r\n                        selectedVersion['exist'] ?\r\n                            <>\r\n                                <button\r\n                                    className=\"btn remove\"\r\n                                    onClick={() => removeHandler({\r\n                                        name: firmware.name,\r\n                                        version: selectedVersion.version\r\n                                    })}\r\n                                >\r\n                                    <div className=\"mask\"></div>\r\n                                    <i className=\"iconfont icon-delete\"></i>\r\n                                    <span>Remove</span>\r\n                                </button>\r\n                                {btnGetToken()}\r\n                                {device === 'stickv' ? btnShowDataDemo() : null}\r\n                                <button\r\n                                    className=\"btn burn\"\r\n                                    onClick={() => beforeBurn({\r\n                                        ...props,\r\n                                        version: selectedVersion.version,\r\n                                        type: device\r\n                                    })}\r\n                                >\r\n                                    <div className=\"mask\"></div>\r\n                                    <i className=\"iconfont icon-hot-or-burn-interface-symbol\"></i>\r\n                                    <span>Burn</span>\r\n                                </button>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                {device === 'stickv' ? btnShowDataDemo() : null}\r\n                                <button\r\n                                    className={cs('btn', 'download', selectedVersion.downloadStatus === DownloadStatus.DOWNLOADING ? 'downloading' : '')}\r\n                                    onClick={() => downloadHanlder({\r\n                                        name: firmware.name,\r\n                                        version: selectedVersion.version,\r\n                                        type: device\r\n                                    })}\r\n                                >\r\n                                    <div className=\"mask\"></div>\r\n                                    {downloadButton({ selectedVersion })}\r\n                                </button>\r\n                            </>\r\n                    }\r\n                </div>\r\n                <div className=\"remark\">\r\n                    <div>\r\n                        <div className=\"left\">\r\n                            <span>Author: {firmware.publisher}</span>\r\n                        </div>\r\n                        <div className=\"right\">\r\n                            <i className=\"iconfont icon-clouddownload\"></i>\r\n                            <span>{downloadText}</span>\r\n                        </div>\r\n                        <div className=\"clear-fix\"></div>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        com: state.burn.com,\r\n        selectedType: state.firmware.selected\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        openModal: component => dispatch(openModal({ component })),\r\n        closeModal: _ => dispatch(setAnimation({ animation: AnimationState.FADE_OUT })),\r\n        startStdoutMessage: message => dispatch(startStdout({ message })),\r\n        appendStdoutMessage: message => dispatch(appendStdout({ message }))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FirmwareItem);","import FirmwareItem from './FirmwareItem';\r\n\r\nexport default FirmwareItem;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport FirmwareItem from '../FirmwareItem';\r\n\r\nimport './FirmwareList.scss';\r\n\r\nfunction FirmwareList(props) {\r\n    const { firmwareList,  downloadHanlder, removeHandler, device } = props;\r\n    const listRef = useRef();\r\n    useEffect(() => {\r\n        function scrollHandler(ev) {\r\n            ev.preventDefault();\r\n            listRef.current.style.transform = `translateY(-${ev.srcElement.scrollTop}px)`;\r\n        }\r\n        listRef.current.parentElement.addEventListener('scroll', scrollHandler);\r\n        return () => {\r\n            listRef.current.parentElement.removeEventListener('scroll', scrollHandler);\r\n        }\r\n    }, []);\r\n    if(!firmwareList) {\r\n        return (\r\n            <div className=\"list-firmware\"></div>\r\n        )\r\n    }\r\n    const list = firmwareList.map((firmware, index) => {\r\n        return (\r\n            <FirmwareItem\r\n                key={device + '-' +firmware.name}\r\n                device={device}\r\n                firmware={firmware}\r\n                downloadHanlder={downloadHanlder}\r\n                removeHandler={removeHandler}\r\n            />\r\n        )\r\n    });\r\n    return (\r\n        <div className=\"list-firmware\" ref={listRef}>\r\n            { list }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FirmwareList;","import FirmwareList from './FirmwareList';\r\n\r\nexport default FirmwareList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport cs from 'classnames';\r\nimport { sendCommand, CommandTypes, sendCommandOnce } from '../../ipc/events';\r\nimport { getFirmware, selectDeviceType, updateDownloadStatus, updateFirmwares, searchFirmware } from '../../actions/firmware.action';\r\nimport DeviceList from '../../components/DeviceList';\r\nimport Searchbox from '../../components/Searchbox';\r\nimport FirmwareList from '../../components/FirmwareList';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport { DownloadStatus } from '../../constants';\r\n\r\nimport './Firmware.scss';\r\nimport { setBaudrate } from '../../actions/burn.action';\r\n\r\nconst electron = window.require('electron');\r\nconst ipcRenderer = electron.ipcRenderer;\r\n\r\nclass Firmware extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true\r\n        }\r\n\r\n        this.downloadHanlder = this.downloadHanlder.bind(this);\r\n        this.removeHanlder = this.removeHanlder.bind(this);\r\n        this._updateFirmwares = this._updateFirmwares.bind(this);\r\n        this.setCurrentDevice = this.setCurrentDevice.bind(this);\r\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this._getFirmwares();\r\n    }\r\n\r\n    _getFirmwares() {\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        sendCommandOnce(CommandTypes.getFirmwares, false, data => {\r\n            console.log(data);\r\n            this.setState({\r\n                loading: false\r\n            });\r\n            if(data === null) return;\r\n            this.props.getFirmwares(data);\r\n        });\r\n    }\r\n\r\n    _updateFirmwares(local) {\r\n        sendCommandOnce(CommandTypes.getFirmwares, local, data => {\r\n            if(data === null) return;\r\n            this.props.updateFirmwares(data);\r\n        });\r\n    }\r\n\r\n    removeHanlder(payload) {\r\n        let _updateFirmwares = this._updateFirmwares;\r\n        window.swal({\r\n            title: 'Tips',\r\n            text: 'Do you sure to delete this firmware?',\r\n            icon: 'warning',\r\n            buttons: {\r\n                ok: 'Yes',\r\n                cancel: 'No'\r\n            }\r\n        })\r\n        .then(r => {\r\n            if(r == 'ok') {\r\n                let { name, version } = payload;\r\n                let selectedType = this.props.firmware.selected;\r\n                let data = {\r\n                    firmware: name,\r\n                    version: version,\r\n                    type: selectedType\r\n                }\r\n                sendCommand(CommandTypes.removeFirmware, data, data => {\r\n                    if(data) {\r\n                        _updateFirmwares(true);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    downloadHanlder(payload) {\r\n        let _updateFirmwares = this._updateFirmwares;\r\n        let { name, version, type } = payload;\r\n        let callbackSubscribe = `${CommandTypes.downloadFirmware}Callback-${name}-${type}-${version}`;\r\n        let updateFirmwareDownloadStatus = this.props.updateFirmwareDownloadStatus;\r\n        ipcRenderer.send(CommandTypes.downloadFirmware, {\r\n            firmware: name,\r\n            version: version,\r\n            type: type\r\n        });\r\n        if(ipcRenderer.eventNames().includes(callbackSubscribe)) {\r\n            return;\r\n        }\r\n        ipcRenderer.on(callbackSubscribe, function(ev, progress) {\r\n            // Download status\r\n            // return null as duplicate download\r\n            // return 'end' as failed\r\n            // return 0-1 is the progress of download\r\n            if(progress === null) {\r\n                return;\r\n            }\r\n            if(progress === 'end') {\r\n                // When download error\r\n                updateFirmwareDownloadStatus({\r\n                    name,\r\n                    version,\r\n                    type,\r\n                    downloadStatus: DownloadStatus.ERROR,\r\n                    progress: 0\r\n                });\r\n                ipcRenderer.off(callbackSubscribe, this.listeners(callbackSubscribe)[0]);\r\n                return;\r\n            }\r\n            if(progress == 1) {\r\n                // When download finish\r\n                updateFirmwareDownloadStatus({\r\n                    name,\r\n                    version,\r\n                    type,\r\n                    downloadStatus: DownloadStatus.END,\r\n                    progress: 1\r\n                });\r\n                ipcRenderer.off(callbackSubscribe, this.listeners(callbackSubscribe)[0]);\r\n                _updateFirmwares(true);\r\n                return;\r\n            }\r\n            updateFirmwareDownloadStatus({\r\n                name,\r\n                version,\r\n                type,\r\n                downloadStatus: DownloadStatus.DOWNLOADING,\r\n                progress\r\n            });\r\n        });\r\n    }\r\n\r\n    setCurrentDevice(type) {\r\n        let baudrate = '1500000';\r\n        switch(type) {\r\n            case 'core':\r\n                baudrate = '1500000';\r\n                break;\r\n            case 'stickc':\r\n                baudrate = '750000';\r\n                break;\r\n            case 'atom':\r\n                baudrate = '750000';\r\n                break;\r\n            case 'stickv':\r\n                baudrate = '1500000';\r\n                break;\r\n            case 'timercam':\r\n                baudrate = '1500000';\r\n                break;\r\n            case 'coreink':\r\n                baudrate = '1500000';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.props.setSelectedDeviceType(type);\r\n        this.props.setBaudrate(baudrate);\r\n        sendCommand(CommandTypes.saveConfig, { key: 'baudrate', value: baudrate });\r\n    }\r\n\r\n    inputChangeHandler(ev) {\r\n        this.props.searchFirmware(ev.target.value);\r\n    }\r\n\r\n    render() {\r\n        const { loading } = this.state;\r\n        const { list, selected } = this.props.firmware;\r\n        const { owns } = this.props.global;\r\n        return (\r\n            <div className=\"container-firmware\">\r\n                <DeviceList owns={owns} selected={selected} setSelected={this.setCurrentDevice} />\r\n                <div className=\"wrapper-firmware-list\">\r\n                    {\r\n                        loading ?\r\n                        <Loading /> :\r\n                        <>\r\n                            <Searchbox onChange={this.inputChangeHandler} />\r\n                            <div className={cs('list', selected === 'core' ? 'active' : '')}>\r\n                                <FirmwareList\r\n                                    device={'core'}\r\n                                    firmwareList={list['core']}\r\n                                    downloadHanlder={this.downloadHanlder}\r\n                                    removeHandler={this.removeHanlder}\r\n                                />\r\n                            </div>\r\n                            <div className={cs('list', selected === 'core2' ? 'active' : '')}>\r\n                                <FirmwareList\r\n                                    device={'core2'}\r\n                                    firmwareList={list['core2']}\r\n                                    downloadHanlder={this.downloadHanlder}\r\n                                    removeHandler={this.removeHanlder}\r\n                                />\r\n                            </div>\r\n                            <div className={cs('list', selected === 'stickc' ? 'active' : '')}>\r\n                                <FirmwareList\r\n                                    device={'stickc'}\r\n                                    firmwareList={list['stickc']}\r\n                                    downloadHanlder={this.downloadHanlder}\r\n                                    removeHandler={this.removeHanlder}\r\n                                />\r\n                            </div>\r\n                            <div className={cs('list', selected === 'atom' ? 'active' : '')}>\r\n                                <FirmwareList\r\n                                    device={'atom'}\r\n                                    firmwareList={list['atom']}\r\n                                    downloadHanlder={this.downloadHanlder}\r\n                                    removeHandler={this.removeHanlder}\r\n                                />\r\n                            </div>\r\n                            <div className={cs('list', selected === 'stickv' ? 'active' : '')}>\r\n                                <FirmwareList\r\n                                    device={'stickv'}\r\n                                    firmwareList={list['stickv']}\r\n                                    downloadHanlder={this.downloadHanlder}\r\n                                    removeHandler={this.removeHanlder}\r\n                                />\r\n                            </div>\r\n                            <div className={cs('list', selected === 'timercam' ? 'active' : '')}>\r\n                                <FirmwareList\r\n                                    device={'timercam'}\r\n                                    firmwareList={list['timercam']}\r\n                                    downloadHanlder={this.downloadHanlder}\r\n                                    removeHandler={this.removeHanlder}\r\n                                />\r\n                            </div>\r\n                            <div className={cs('list', selected === 'coreink' ? 'active' : '')}>\r\n                                <FirmwareList\r\n                                    device={'coreink'}\r\n                                    firmwareList={list['coreink']}\r\n                                    downloadHanlder={this.downloadHanlder}\r\n                                    removeHandler={this.removeHanlder}\r\n                                />\r\n                            </div>\r\n                            <div className={cs('list', selected === 'paper' ? 'active' : '')}>\r\n                                <FirmwareList\r\n                                    device={'paper'}\r\n                                    firmwareList={list['paper']}\r\n                                    downloadHanlder={this.downloadHanlder}\r\n                                    removeHandler={this.removeHanlder}\r\n                                />\r\n                            </div>\r\n                            <div className={cs('list', selected === 'stamp' ? 'active' : '')}>\r\n                                <FirmwareList\r\n                                    device={'stamp'}\r\n                                    firmwareList={list['stamp']}\r\n                                    downloadHanlder={this.downloadHanlder}\r\n                                    removeHandler={this.removeHanlder}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        firmware: state.firmware,\r\n        global: state.global\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getFirmwares: firmwares => dispatch(getFirmware(firmwares)),\r\n        updateFirmwares: firmwares => dispatch(updateFirmwares(firmwares)),\r\n        setSelectedDeviceType: type => dispatch(selectDeviceType(type)),\r\n        updateFirmwareDownloadStatus: payload => dispatch(updateDownloadStatus(payload)),\r\n        setBaudrate: baudrate => dispatch(setBaudrate({baudrate})),\r\n        searchFirmware: keyword => dispatch(searchFirmware(keyword))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Firmware);","import React from 'react';\r\nimport cs from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport { closeModal, setAnimation } from '../../actions/modal.action';\r\nimport { AnimationState } from '../../constants';\r\n\r\nimport './DynamicModal.scss';\r\n\r\nclass DynamicModal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.beforeCloseModal = this.beforeCloseModal.bind(this);\r\n    }\r\n\r\n    beforeCloseModal() {\r\n        this.props.setAnimation(AnimationState.FADE_OUT);\r\n    }\r\n\r\n    shouldComponentUpdate(newProps) {\r\n        // When open mdoal\r\n        if(this.props.modal.visiable !== newProps.modal.visiable && newProps.modal.visiable) {\r\n            setTimeout(() => {\r\n                this.props.setAnimation(AnimationState.FADE_IN);\r\n            });\r\n        }\r\n\r\n        // When close modal, set `opacity` to 0 before set `display` to none\r\n        if(this.props.modal.animation !== newProps.modal.animation &&\r\n            newProps.modal.animation === AnimationState.FADE_OUT) {\r\n                setTimeout(() => {\r\n                    this.props.closeModal();\r\n                }, 250);\r\n            }\r\n            \r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const { visiable, component, animation } = this.props.modal;\r\n        if(!visiable) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className={cs('full-main', animation)}>\r\n                <div className=\"mask\" onClick={this.beforeCloseModal}></div>\r\n                <div className=\"modal\">\r\n                    { component }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        modal: state.modal\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        closeModal: _ => dispatch(closeModal()),\r\n        setAnimation: animation => dispatch(setAnimation({animation}))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DynamicModal);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport cs from 'classnames';\r\nimport { sendCommand, CommandTypes } from './ipc/events';\r\nimport TopBar from './containers/TopBar';\r\nimport Header from './containers/Header';\r\nimport Firmware from './containers/Firmware/Firmware';\r\nimport DynamicModal from './containers/DynamicModal/DynamicModal';\r\nimport { setTheme, setBurnParams, setVersion, setLastestVersion, setLoginState, setOwns } from './actions/global.action';\r\nimport { setBaudrate } from './actions/burn.action';\r\n\r\nrequire('./common.scss');\r\n\r\nconst electron = window.require('electron');\r\nconst { ipcRenderer } = electron;\r\n\r\nconst App = (props) => {\r\n    const { \r\n        theme,\r\n        setTheme,\r\n        setBurnParams,\r\n        setBaudrate,\r\n        setVersion,\r\n        setLastestVersion,\r\n        setLoginState,\r\n        setOwns\r\n    } = props;\r\n\r\n    useEffect(() => {\r\n        sendCommand(CommandTypes.loadAllConfig, null, data => {\r\n            console.log(data);\r\n            setTheme(data['theme']);\r\n            setBurnParams(data['burnParams']);\r\n            setBaudrate(data['baudrate']);\r\n            setVersion(data['version']);\r\n            setLastestVersion(data['lastest']);\r\n            setLoginState({isLogin: data['isLogin'], ssoToken: data['ssoToken']});\r\n        });\r\n\r\n        ipcRenderer.on('GET_ALL_HARDWARES', (ev, data) => {\r\n            let all = data.data;\r\n            setOwns(all);\r\n        })\r\n    }, []);\r\n    \r\n    return (\r\n        <div className={cs('main', theme)}>\r\n            <TopBar />\r\n            <Header />\r\n            <Firmware />\r\n            <DynamicModal />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.global.theme\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setTheme: theme => dispatch(setTheme({theme})),\r\n        setBaudrate: baudrate => dispatch(setBaudrate({baudrate})),\r\n        setBurnParams: params => dispatch(setBurnParams({...params})),\r\n        setVersion: version => dispatch(setVersion({version})),\r\n        setLastestVersion: lastest => dispatch(setLastestVersion({lastest})),\r\n        setLoginState: loginInfo => dispatch(setLoginState({loginState: loginInfo.isLogin, ssoToken: loginInfo.ssoToken})),\r\n        setOwns: hardwares => dispatch(setOwns({owns: hardwares}))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './reducers';\r\n\r\nimport App from './App';\r\n\r\nimport './polyfill/image';\r\n\r\nconst Root = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nReactDOM.render(<Root />, document.getElementById('app'));"],"sourceRoot":""}